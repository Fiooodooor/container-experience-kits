##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# Kubernetes node configuration

# Enable IOMMU (required for SR-IOV networking)
iommu_enabled: true

# dataplane interface configuration list
dataplane_interfaces: []
#  - name: enp24s0f0                 # PF interface name
#    bus_info: "18:00.0"             # pci bus info
#    pf_driver: i40e                 # PF driver, "i40e", "ice"
#    default_vf_driver: "iavf"       # default driver to be used with VFs if specific driver is not defined in the "sriov_vfs" section
#    sriov_numvfs: 6                 # total number of VFs to create including VFs listed in the "sriov_vfs" section.
                                     # If total number of VFs listed in the "sriov_vfs" section is greater than "sriov_numvfs" then excessive entities will be ignored.
                                     # VF's name should follow scheme: <arbitrary_vf_name>_<zero_started_index_of_vf>
                                     # If index in the VF's name is greater than "sriov_numfs - 1" such VF will be ignored.
#    sriov_vfs:                      # list of VFs to create on this PF with specific driver
#      vf_00: "vfio-pci"             # VF driver to be attached to this VF under this PF. Options: "iavf", "vfio-pci", "igb_uio"
#      vf_05: "vfio-pci"
#  - name: enp24s0f1
#    bus_info: "18:00.1"
#    pf_driver: i40e
#    default_vf_driver: "vfio-pci"
#    sriov_numvfs: 4
#    sriov_vfs: {}                   # no VFs with specific driver on this PF or "sriov_vfs" can be ommited for convenience

sriov_cni_enabled: true

# Install DPDK (required for SR-IOV networking)
install_dpdk: true

# DPDK version
dpdk_version: "19.11.6"

# Custom DPDK patches local path
# dpdk_local_patches_dir: "/tmp/patches/dpdk-19.11.6"

# Set to 'true' to update i40e, ice and iavf kernel modules
update_nic_drivers: true

# Set 'true' to update NIC firmware
update_nic_firmware: false

# Additional list of NIC interfaces that the FW update will be executed on
# NOTE: FW update will be also executed on all NICs listed in "dataplane_interfaces[*].name"
firmware_update_nics: []
#  - enp24s0f0
#  - enp24s0f1

# Enabling this feature will install QAT drivers + services
update_qat_drivers: true

# qat interface configuration list
qat_devices: []
#  - qat_dev: crypto01                # Device name as separate QAT Symmetric Crypto devices on which qat_sriov_numvfs will be distributed
#    qat_id: "0000:ab:00.0"           # Device QAT id one using DPDK compatible driver for VF devices to be used by vfio-pci kernel driver, replace as required
#    qat_module_type: qat_c62x        # QAT Crypto Poll Mode Kernel Module supported are qat_dh895xcc,qat_c62x,qat_c3xxx,qat_200xx,qat_c4xxx,qat_d15xx
#    qat_pci_type: c6xx               # QAT Crypto Poll Mode Pci Driver id supported are dh895xcc,c6xx,c3xxx,d15xx,200xx & c4xxx
#    qat_sriov_numvfs: 12             # set how many VFs per qat_id to be created such as c6xxvf support 32 so per device will be 10+10+12=32, replace as required
                                     # Note: If don't want to assign VFs to id leave it as 0 such as qat_sriov_numvfs: 0
#  - qat_dev: crypto02
#    qat_id: "0000:xy:00.0"
#    qat_module_type: qat_c62x
#    qat_pci_type: c6xx
#    qat_sriov_numvfs: 10

#  - qat_dev: crypto03
#    qat_id: "0000:yz:00.0"
#    qat_module_type: qat_c62x
#    qat_pci_type: c6xx
#    qat_sriov_numvfs: 10

# Enables hugepages support
hugepages_enabled: true

# Hugepage sizes available: 2M, 1G
default_hugepage_size: 1G

# Sets how many hugepages of each size should be created
hugepages_1G: 4
hugepages_2M: 0

# CPU isolation from Linux scheduler
isolcpus_enabled: true
# Disable CMKs autogenerate_isolcpus in group_vars to set custom isolcpus range; Otherwise this range will be automatically generated
# If defining range and using CMK you must account group_vars requested exclusive/shared cores
isolcpus: "4-11"

# Native CPU Manager (Kubernetes built-in)
# These settings are relevant only if in group_vars native_cpu_manager_enabled: true 
# Amount of CPU cores that will be reserved for the housekeeping (2000m = 2000 millicores = 2 cores)
native_cpu_manager_system_reserved_cpus: 2000m
# Amount of CPU cores that will be reserved for Kubelet
native_cpu_manager_kube_reserved_cpus: 1000m
# Explicit list of the CPUs reserved from pods scheduling.
# Note: Supported only with kube_version 1.17 and newer, overrides native_cpu_manager_system_reserved_cpus and native_cpu_manager_kube_reserved_cpus.
#native_cpu_manager_reserved_cpus: "0,1,2"
# Note: All reamining unreserved CPU cores will be consumed by the workloads.

# Enable/Disable Intel PState scaling driver
intel_pstate_enabled: false
# Config options for intel_pstate: disable, passive, force, no_hwp, hwp_only, support_acpi_ppc, per_cpu_perf_limits
intel_pstate: disable
# Enable/Disable Intel Turbo Boost PState attribute
turbo_boost_enabled: false

# (CentOS 7 only) install real time kernel and related packages
install_real_time_package: false

# Telemetry configuration
# intel_pmu plugin collects information provided by Linux perf interface.
enable_intel_pmu_plugin: false
# CPU Threads to be monitored by Intel PMU Plugin.
# If the field is empty, all available cores will be monitored.
# Please refer to https://collectd.org/wiki/index.php/Plugin:Intel_PMU for configuration details.
intel_pmu_plugin_monitored_cores: ""
# CPU Threads to be monitored by Intel RDT Plugin.
# If the field is empty, all available cores will be monitored.
# Please refer to https://collectd.org/wiki/index.php/Plugin:IntelRDT for configuration details.
intel_rdt_plugin_monitored_cores: ""

# Additional list of plugins that will be excluded from collectd deployment.
exclude_collectd_plugins: []
