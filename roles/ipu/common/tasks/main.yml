##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: Load IPU common variables
  ansible.builtin.debug:
    msg: Load IPU common variables

- name: check supported OS for IPU
  ansible.builtin.assert:
    that:
      - (ansible_distribution == "Rocky" and ansible_distribution_version is version('9.1', '==')) or
        (ansible_distribution == "Rocky" and ansible_distribution_version is version('9.2', '==')) or
        (ansible_distribution == "Fedora")
    fail_msg:
      - "Current OS - {{ ansible_distribution }} {{ ansible_distribution_version }} - is not supported for IPU"
      - "Supported OSes are Rocky 9.1, Rocky 9.2 and Fedora"
  when:
    - inventory_hostname in groups['ipu_host'] or
      inventory_hostname in groups['ipu_linkp']

- name: select the right connection host qroup
  ansible.builtin.set_fact:
    connection_host_group: "{% if ipu_1gbe_connected_to_linkp | bool %}ipu_linkp{% else %}ipu_host{% endif %}"

- name: setup 1GbE conncetion
  when:
    - inventory_hostname in groups[connection_host_group]
  block:
    - name: check IP address
      ansible.builtin.shell: "set -o pipefail && ip a show {{ ipu_1gbe_link_interface }} | grep \"inet \""
      args:
        executable: /bin/bash
      register: ip_status
      changed_when: false
      failed_when: '" does not exist." in ip_status.stderr'

    - name: nmcli assign IP address to interface for 1GbE link from IPU
      community.general.nmcli:
        conn_name: "{{ ipu_1gbe_link_interface }}"
        ifname: "{{ ipu_1gbe_link_interface }}"
        type: ethernet
        ip4: "{{ ipu_1gbe_link_interface_ip }}"
        gw4: "{{ ipu_1gbe_link_interface_ip | ansible.utils.ipaddr('address') }}"
        state: present
      when:
        - ipu_1gbe_link_interface_ip not in ip_status.stdout
