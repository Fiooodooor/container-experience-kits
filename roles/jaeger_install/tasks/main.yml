##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
- name: Deploy Jaeger
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
  block:
    - name: Create monitoring and observability namespace
      kubernetes.core.k8s:
        name: "{{ item }}"
        kind: Namespace
        state: present
      loop:
        - monitoring
        - observability

    - name: Create jaeger folder
      ansible.builtin.file:
        state: directory
        dest: "{{ (project_root_dir, 'jaeger') | path_join }}"
        mode: 0755

    - name: Copy jaeger files
      ansible.builtin.copy:
        src: "files/"
        dest: "{{ (project_root_dir, 'jaeger') | path_join }}"
        mode: 0644

    - name: Download jaeger operator CRD
      ansible.builtin.get_url:
        url: "{{ jaeger_crd_url }}"
        dest: "{{ (project_root_dir, 'jaeger', 'jaeger_operator.yml') | path_join }}"
        mode: 0755

    - name: Create jaeger resources
      kubernetes.core.k8s:
        state: present
        src: "{{ (project_root_dir, 'jaeger', item) | path_join }}"
      loop:
        - jaeger_certs.yml
        - jaeger_operator.yml
        - jaeger_rolebinding.yml

    - name: Get Elasticsearch credentials
      ansible.builtin.shell: >-
          set -o pipefail && kubectl get secrets --namespace=monitoring
          elasticsearch-main-es-elastic-user -ojsonpath='{.data.elastic}' | base64 -d
      changed_when: false
      register: elastic_pass
      args:
        executable: /bin/bash

    - name: Create secret with Elasticsearch credentials
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: "jaeger-secret"
            namespace: "monitoring"
          stringData:
            ES_USERNAME: "elastic"
            ES_PASSWORD: "{{ elastic_pass.stdout }}"

    - name: Wait for jaeger operator CRD
      kubernetes.core.k8s_info:
        kind: CustomResourceDefinition
        name: jaegers.jaegertracing.io
        wait: true
        wait_condition:
          type: Established
        wait_timeout: 180

    - name: Wait for jaeger operator Deployment
      kubernetes.core.k8s_info:
        kind: Deployment
        name: jaeger-operator
        namespace: observability
        wait: true
        wait_condition:
          reason: MinimumReplicasAvailable
          type: Available
        wait_timeout: 180

    - name: Create instance of jaeger-operator
      kubernetes.core.k8s:
        state: present
        src: "{{ (project_root_dir, 'jaeger', 'jaeger_deployment.yml') | path_join }}"

    - name: Wait for jaeger instance
      kubernetes.core.k8s_info:
        kind: Jaeger
        name: jaeger
        namespace: monitoring
      register: jaeger_instance_info
      until: |
       jaeger_instance_info.resources is defined and
       jaeger_instance_info.resources | length != 0 and
       (jaeger_instance_info.resources[0].status.phase | default("NOTREADY")) == "Running"
      retries: 30
      delay: 10

    - name: Get jaeger-query deployment info
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Deployment
        name: jaeger-query
        namespace: monitoring
      register: jaeger_query_deployment

    - name: Remove annotation from jaeger-query
      ansible.builtin.command: "kubectl patch deployment jaeger-query -n monitoring --type=json {{ jaeger_query_remove }}"
      changed_when: true
      when: "jaeger_annotations_key_to_remove in (jaeger_query_deployment.resources | map(attribute='metadata') | map(attribute='annotations'))[0].keys()"
