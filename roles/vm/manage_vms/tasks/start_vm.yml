##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: Handle VM start
  block:
    - name: Start VM - {{ vm.name }}
      command: >
        virt-install
          --connect qemu:///system
          --name {{ vm.name }}
          --cpu host
          {%- if vm.type == 'work' and sgx_dp_enabled | default(false) %}
          --ram {{ vm.memory - sgx_memory_size }}
          {%- else %}
          --ram {{ vm.memory }}
          {%- endif %}
          --vcpus={{ vm.cpu_total }},sockets=1,cores={{ (vm.cpu_total / 2) | int }},threads=2
          --cpuset={{ vm.cpus }}
          --os-variant {{ vm_os_variant }}
          --disk path={{ vm_project_root_dir }}/{{ vm.type }}/{{ vm.name }}/cek.qcow2,format=qcow2
          --disk {{ vm_project_root_dir }}/{{ vm.type }}/{{ vm.name }}/cek.iso,device=cdrom
          --network network=vm-default,model=virtio
          --iommu model=intel,driver.intremap=on,driver.caching_mode=on
          --features apic=on,ioapic.driver=qemu
          {%- if vm.type == "work" %}
          {%- for pci in vm.pci %}
          --hostdev {{ pci }},address.type=pci
          {%- endfor -%}
          {%- endif %}
          {%- if vm.type == 'work' and sgx_dp_enabled | default(false) %}
          --xml xpath.create=./devices/memory
          --xml ./devices/memory/@model="sgx-epc"
          --xml xpath.create=./devices/memory/target/size
          --xml ./devices/memory/target/size/@unit="MiB"
          --xml ./devices/memory/target/size={{ sgx_memory_size }}
          --xml xpath.create=./maxMemory
          --xml ./maxMemory/@slots={%- if (vm.memory) > 2048 %}{{ ((vm.memory) / 1024) | int }}{%- else %}"2"{%- endif %}
          --xml ./maxMemory/@unit="MiB"
          --xml ./maxMemory={{ vm.memory }}
          --xml xpath.create=./cpu/numa
          --xml xpath.create=./cpu/numa/cell
          --xml ./cpu/numa/cell/@id="0"
          --xml ./cpu/numa/cell/@cpus="0 - {{ vm.cpu_total - 1 }}"
          --xml ./cpu/numa/cell/@memory="{{ vm.memory - sgx_memory_size }}"
          --xml ./cpu/numa/cell/@unit="MiB"
          {%- endif %}
          --network network=vxlanbr{{ vm.vxlan }},model=virtio
          --import --noautoconsole
      changed_when: true

    - name: Make VM persistent accross VM host reboot - {{ vm.name }}
      command: virsh autostart {{ vm.name }}
      changed_when: true

    - name: Optimize VM - {{ vm.name }}
      include_tasks: optimize.yml
  when:
    - (not vm.name in current_vms.stdout) or
      vm_recreate_existing | default(true)

- name: Current VM start - {{ vm.name }}
  debug:
    msg: "Current VM - {{ vm.name }} was already running"
  when:
    - (vm.name in current_vms.stdout)
    - not vm_recreate_existing | default(true)
