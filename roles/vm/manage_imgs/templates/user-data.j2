#cloud-config
users:
  - name: root
    ssh-authorized-keys:
      - {{ lookup('file', '{{ local_login_user_dir }}/.ssh/id_rsa.pub') }}
{% for pub in remote_pub.results %}
      - {{ pub['content'] | b64decode }}
{%- endfor %}
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash
    lock_passwd: false
    hashed_passwd: '{{ vm_hashed_passwd }}'
{% if login_user != "root" %}
  - name: "{{ login_user }}"
    ssh-authorized-keys:
      - {{ lookup('file', '{{ local_login_user_dir }}/.ssh/id_rsa.pub') }}
{% for pub in remote_pub.results %}
      - {{ pub['content'] | b64decode }}
{%- endfor %}
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash
    lock_passwd: false
    hashed_passwd: '{{ vm_hashed_passwd_non_root | default( vm_hashed_passwd ) }}'
{% endif %}


runcmd:
  - echo "Starting cloud-init runcmd execution"
{% if configure_tdx | default(false) %}
  - apt install --fix-broken
  - sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="[^"]*/& ima_hash=sha384 ima_policy=critical_data/' /etc/default/grub.d/50-cloudimg-settings.cfg
  - update-grub2
{% endif %}
  - for i in `cat /etc/environment`; do export $i; done
{% if vm_image_distribution == "ubuntu" %}
  - netplan apply
{% endif %}
  - "chown -R {{ login_user }}:{{ login_user }} {{ login_user_dir }}"
  - "chmod 0700 {{ login_user_dir }}"
  - "chmod 0700 {{ login_user_dir }}/.ssh"
  - echo "End of cloud-init runcmd execution"

package_update: true
{% if vm_image_distribution == "rocky" %}
packages_upgrade: true
packages:
  - kernel
  - python3
  - vim
  - pciutils
package_reboot_if_required: true
{% elif configure_tdx | default(false) %}
packages:
  - python3-pip
  - golang-go
  - golang
  - golang-doc
  - ntp
{% endif %}

write_files:
{% if vm_image_distribution == "ubuntu" and not configure_tdx | default(false) %}
  - path: /etc/netplan/99-custom.yaml
    content: |
     network:
       ethernets:
         enp2s0:
           dhcp4: true
       version: 2
  - path: /etc/apt/apt.conf.d/00-proxy
    permissions: '0640'
    owner: root
    content: |
      Acquire::http { Proxy "{{ http_proxy | default('') }}"; };
      Acquire::https { Proxy "{{ https_proxy | default('') }}"; };
{% endif %}
{% if configure_tdx | default(false) %}
  - content: |
      network:
          version: 2
          renderer: networkd
          ethernets:
              en:
                  match:
                      name: "en*"
                  dhcp4: true
                  dhcp-identifier: mac
    path: /etc/netplan/netplan.yaml
  - path: /etc/apt/apt.conf.d/00-proxy
    permissions: '0640'
    owner: root
    content: |
      Acquire::http { Proxy "{{ http_proxy | default('') }}"; };
      Acquire::https { Proxy "{{ https_proxy | default('') }}"; };
  - content: |
      ===========================================================================
      Welcome to TDX guest.
      Created by https://github.com/intel/tdx-tools
      ===========================================================================
    path: /etc/motd
  - content: |
      SUBSYSTEM=="misc",KERNEL=="tdx-guest",MODE="0666"
    path: /etc/udev/rules.d/90-tdx.rules
{% endif %}
{% if vm_image_distribution == "rocky" %}
  - path: /etc/sysconfig/network-scripts/ifcfg-eth1
    content: |
     BOOTPROTO=dhcp
     DEVICE=eth1
     ONBOOT=yes
     PEERDNS=yes
     TYPE=Ethernet
     USERCTL=no
  - path: /etc/dnf/dnf.conf
    permissions: '0640'
    owner: root
    content: |
      proxy="{{ http_proxy | default('') }}"
    append: true
{% endif %}
  - path: /etc/environment
    content: |
      http_proxy={{ http_proxy | default('') }}
      https_proxy={{ https_proxy | default('') }}
      no_proxy=
    append: true
  - path: "{{ login_user_dir }}/.ssh/id_rsa"
    content: |
      {{ lookup('file', '{{ local_login_user_dir }}/.ssh/id_rsa') | indent(6) }}
    permissions: '0600'
  - path: "{{ login_user_dir }}/.ssh/id_rsa.pub"
    content: {{ lookup('file', '{{ local_login_user_dir }}/.ssh/id_rsa.pub') }}
    permissions: '0644'
