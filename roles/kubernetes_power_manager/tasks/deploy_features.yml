##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
- name: prepare and deploy Uncore Frequency
  when: hostvars[power_node]['uncore_frequency']['enabled'] | default(false) | bool
  block:
    - name: prepare required varibles to deploy Uncore Frequency
      ansible.builtin.set_fact:
        system_max_frequency: "{{ hostvars[power_node]['uncore_frequency']['system_max_frequency'] }}"
        system_min_frequency: "{{ hostvars[power_node]['uncore_frequency']['system_min_frequency'] }}"
        die_selector: "{{ hostvars[power_node]['uncore_frequency']['die_selector'] }}"
      when: inventory_hostname == groups['kube_control_plane'][0]

    - name: populate Uncore Frequency template
      ansible.builtin.template:
        src: uncore_frequency.yaml.j2
        dest: "{{ (kubernetes_power_manager_dir, 'uncore_frequency_' + power_node + '.yaml') | path_join }}"
        force: yes
        mode: preserve
      when: inventory_hostname == groups['kube_control_plane'][0]

    - name: apply Uncore Frequency
      kubernetes.core.k8s:
        state: present
        src: "{{ (kubernetes_power_manager_dir, 'uncore_frequency_' + power_node + '.yaml') | path_join }}"
      when: inventory_hostname == groups['kube_control_plane'][0]

# C-States
- name: prepare and deploy C-States
  when: hostvars[power_node]['cstates']['enabled']
  block:
    - name: prepare required varibles to deploy C-States
      ansible.builtin.set_fact:
        cstates: "{{ hostvars[power_node]['cstates'] }}"
      when: inventory_hostname == groups['kube_control_plane'][0]

    - name: populate C-States template
      ansible.builtin.template:
        src: cstates.yaml.j2
        dest: "{{ (kubernetes_power_manager_dir, 'cstates_' + power_node + '.yaml') | path_join }}"
        force: yes
        mode: preserve
      when: inventory_hostname == groups['kube_control_plane'][0]

    - name: apply C-States
      kubernetes.core.k8s:
        state: present
        src: "{{ (kubernetes_power_manager_dir, 'cstates_' + power_node + '.yaml') | path_join }}"
      when: inventory_hostname == groups['kube_control_plane'][0]
