##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies - cpuid
  package:
    name: cpuid
    state: present

- name: check CPU/BIOS is enabled for SGX
  shell: set -o pipefail && cpuid | grep -i sgx | grep -v ENCL
  args:
    executable: /bin/bash
  register: cpuid_output
  changed_when: false

- name: SGX is not enabled in BIOS
  fail:
    msg:
      - "Please enable all required options for Intel SGX in BIOS."
      - "If failure persists, check with your system vendor."
  when:
    - "'false' in cpuid_output.stdout"
    - not on_vms | default(false)

- name: configure SGX on Ubuntu distribution
  include_tasks: ubuntu.yml
  when:
    - ansible_distribution == 'Ubuntu'

- name: configure SGX on RHEL distribution
  include_tasks: rhel.yml
  when:
    - ansible_os_family == "RedHat"

- name: prepare worker node with sgx enabled
  block:
    - name: ensure sgx_prv group exists
      ansible.builtin.group:
        name: sgx_prv
        state: present

    - name: add user to sgx_prv group
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: sgx_prv
        append: yes

    - name: create udev rules
      ansible.builtin.blockinfile:
        path: /etc/udev/rules.d/93-sgx-provision.rules
        create: yes
        mode: '0644'
        block: |
          SUBSYSTEM=="misc",KERNEL=="enclave",MODE="0666"
          SUBSYSTEM=="misc",KERNEL=="provision",GROUP="sgx_prv",MODE="0660"
          SUBSYSTEM=="sgx",KERNEL=="sgx/enclave",MODE="0666"
          SUBSYSTEM=="sgx",KERNEL=="sgx/provision",MODE="0660"
          SUBSYSTEM=="misc",KERNEL=="sgx_enclave",MODE="0666",SYMLINK+="sgx/enclave"
          SUBSYSTEM=="misc",KERNEL=="sgx_provision",GROUP="sgx_prv",MODE="0660",SYMLINK+="sgx/provision"

    - name: copy configure-sgx-udev.service file
      ansible.builtin.copy:
        src: configure-sgx-udev.service
        dest: /lib/systemd/system/configure-sgx-udev.service
        mode: 0755

    - name: ensure configure-sgx-udev.service started
      ansible.builtin.systemd:
        state: started
        name: configure-sgx-udev
        enabled: true
  when:
    - (ansible_distribution == "Ubuntu" and ansible_distribution_version is version('21.04', '>='))
      or (ansible_os_family == "RedHat" and ansible_distribution_version is version('8.4', '>='))

- name: SGX configuration is successful
  debug:
    msg:
      - "The BIOS check passed..."
      - "The system is properly configured..."
      - "Intel SGX Device Plugin may be deployed now!"
