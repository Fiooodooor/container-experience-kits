##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies
  package:
    name:
     - ncurses-devel
     - hmaccalc
     - zlib-devel
     - binutils-devel
     - elfutils-libelf-devel
     - audit-libs-devel
     - bc
     - elfutils-devel
     - java-devel
     - kabi-dw
     - libbpf-devel
     - libcap-devel
     - libcap-ng-devel
     - llvm-toolset
     - newt-devel
     - openssl-devel
     - pciutils-devel
     - perl(ExtUtils::Embed)
     - perl-devel
     - python3-devel
     - python3-docutils
     - xmlto
     - xz-devel
     - rsync
     - "@Development tools"
    state: present

- name: install dwarves needed for kernel requirements
  command: "dnf --enablerepo=PowerTools install dwarves -y"
  changed_when: true

- name: install libbpf-devel needed for kernel requirements
  command: "dnf --enablerepo=PowerTools install libbpf-devel -y"
  changed_when: true

- name: create directories for kernel compilation
  file:
    path: "{{ rpmbuild_dir }}/{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop:
    - BUILD
    - BUILDROOT
    - RPMS
    - SOURCES
    - SPECS
    - SRPMS

- name: create rpmmacros file
  copy:
    content: "%_topdir {{ source_rpm_directory }}/rpmbuild\n"
    dest: "{{ ansible_env.HOME }}/.rpmmacros"
    mode: '0755'
    owner: root
    group: root

- name: read kernel version
  set_fact:
    kernel_version: "{{ ansible_kernel | regex_replace('.x86_64', '') }}"

# NOTE(skonefal): dnf module refuse to install source package.
- name: pull and unpack kernel sources
  command:
    cmd: "rpm -ivh http://vault.centos.org/8.2.2004/BaseOS/Source/SPackages/kernel-{{ kernel_version }}.src.rpm"
    warn: false
  args:
    creates: "{{  source_rpm_directory }}/{{ kernel_version }}-source-installed"

- name: rpmbuild kernel.spec
  command:
    cmd: rpmbuild -bp --target=x86_64 kernel.spec
  args:
    chdir: "{{ rpmbuild_dir }}/SPECS"
    creates: "{{  source_rpm_directory }}/{{ kernel_version }}-rpmbuild-done"

- name: set kernel source dir fact
  set_fact:
    kernel_source_code_dir: "{{ rpmbuild_dir }}/BUILD/kernel-{{ kernel_version }}/linux-{{ ansible_kernel }}"

- name: copy current kernel config
  make:
    chdir: "{{ kernel_source_code_dir }}"
    target: oldconfig

- name: enable INTEL_SPEED_SELECT_INTERFACE as a kernel module
  lineinfile:
    path: "{{ kernel_source_code_dir }}/.config"
    state: present
    regexp: '# CONFIG_INTEL_SPEED_SELECT_INTERFACE is not set'
    line: 'CONFIG_INTEL_SPEED_SELECT_INTERFACE=m'
    mode: '0755'
    owner: root
    group: root

- name: make prepare
  make:
    chdir: "{{ kernel_source_code_dir }}"
    target: prepare

- name: make modules prepare
  make:
    chdir: "{{ kernel_source_code_dir }}"
    target: modules_prepare

- name: compile ISST module
  make:
    chdir: "{{ kernel_source_code_dir }}"
    params:
      M: "drivers/platform/x86/intel_speed_select_if"

- name: install the isst-load-modules-icx systemd service
  template:
    src: isst-load-modules-icx.service.j2
    dest: /lib/systemd/system/isst-load-modules-icx.service
    owner: root
    group: root
    mode: u=rwx,g=r,o=r

- name: check if isst-load-modules-icx systemd service is present # noqa 303
  shell:
    cmd: systemctl list-units --all --type=service | grep "isst-load-modules-icx.service"
  register: isst_svc_check
  changed_when: false
  failed_when: false

- debug:
    msg: "isst-load-modules-icx systemd service is present, skipping kernel module loading"
  when: '"isst-load-modules-icx.service" in isst_svc_check.stdout'
  changed_when: true

- name: run isst-load-modules-icx service on boot
  systemd:
    daemon_reload: yes
    state: started
    name: isst-load-modules-icx
    enabled: yes
  when: '"isst-load-modules-icx.service" not in isst_svc_check.stdout'
