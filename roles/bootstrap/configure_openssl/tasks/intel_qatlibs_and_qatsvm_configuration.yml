##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# Intel QATLibs
- name: Install Intel QATLibs
  block:
    - name: create directory {{ intel_qatlib_download_url_dir }} for Intel QATLibs configuration
      file:
        path: "{{ intel_qatlib_download_url_dir }}"
        state: directory
        mode: '0700'

    - name: download Intel QATLib
      git:
        repo: "{{ intel_qatlib_download_url }}"
        dest: "{{ intel_qatlib_download_url_dir }}"
        version: "{{ intel_qatlib_download_url_version }}"
        force: true

    # using shell module instead of comand as it was giving aclocal: warning: causing playbook failure
    - name: run autogen before configure QATLibs
      shell: './autogen.sh' # noqa 305
      args:
        chdir: "{{ intel_qatlib_download_url_dir }}"
        executable: /bin/bash
      changed_when: true

    - name: check all packages are present for QATLibs installation
      command: './configure --enable-service'
      args:
        chdir: "{{ intel_qatlib_download_url_dir }}"
      changed_when: true

    - name: make install QAT drivers
      make:
        chdir: "{{ intel_qatlib_download_url_dir }}"
        target: install
      become: yes

    - name: reload the dynamic linker cache
      command: "ldconfig"
      changed_when: true

# Mentioned below block is also present in "roles/bootstrap/install_qat_drivers_services/tasks/main.yml" that will only occurs if,
# "enable_intel_qatlibs" is "false" in host_vars because, in order to compile QAT configuration,
# QATlibs must be installed before SVM feature is configured
- name: configuration for QAT Shared Virtual Memory (SVM)
  block:
    - name: set QAT SVM is enabled
      set_fact:
        svm_value: 1

    - name: enable address translation services for QAT Shared Virtual Memory (SVM)
      replace:
        path: "{{ item }}"
        regexp: '(^ATEnabled\s)(.*)$'
        replace: 'ATEnabled = {{ svm_value }}'
        mode: 0600
      with_items:
        - "{{ qat_drivers_dir }}/quickassist/utilities/adf_ctl/conf_files/4xxxvf_dev0.conf.vm"
        - "{{ qat_drivers_dir }}/quickassist/utilities/adf_ctl/conf_files/4xxxvf_dev0.conf.sym.vm"
        - "{{ qat_drivers_dir }}/quickassist/utilities/adf_ctl/conf_files/4xxxvf_dev0.conf.dc.vm"
        - "{{ qat_drivers_dir }}/quickassist/utilities/adf_ctl/conf_files/4xxxvf_dev0.conf.asym.vm"
        - "{{ qat_drivers_dir }}/quickassist/utilities/adf_ctl/conf_files/4xxxvf_dev0.conf.dc.sym.vm"
        - "{{ qat_drivers_dir }}/build/4xxxvf_dev0.conf.vm"
      failed_when: false
  when: enable_qat_svm and enable_qat_svm is defined
