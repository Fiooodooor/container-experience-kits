##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: get ra_loopdevices service status
  ansible.builtin.systemd:
    name: ra_loopdevices
  register: service_stsatus

- name: stop the ra_loopdevices service
  ansible.builtin.service:
    name: "ra_loopdevices"
    state: stopped
    enabled: false
  when:
    - service_stsatus.status.ActiveState == 'active'

- name: initialize the fake loop device persistent volumes list
  ansible.builtin.set_fact:
    fake_pvs: []

- name: set iteration number
  ansible.builtin.set_fact:
    num: 1
    req_num: "{{ simulated_disk_num }}"

- name: add directory for disk image
  ansible.builtin.file:
    path: /opt/cek/disks/tmp/
    state: directory
    mode: '0755'

- name: create file block device for loop devices
  ansible.builtin.command: >-
    dd
    if=/dev/zero of=/opt/cek/disks/tmp/diskimage{{ item }}
    bs=1M
    count="{{ size_per_fake_volume |int * 1024 }}"
  changed_when: true
  with_sequence: start=1 end={{ req_num }} stride=1

- name: format created loop device to ext4 file format
  community.general.filesystem:
    fstype: ext4
    dev: /opt/cek/disks/tmp/diskimage{{ item }}
    force: yes
    state: present
  with_sequence: start=1 end={{ req_num }} stride=1

- name: create mounted folder
  ansible.builtin.file:
    path: "{{ disk_mount_path }}{{ item }}"
    state: directory
    mode: '0755'
  with_sequence: start=1 end={{ req_num }} stride=1

- name: populate loopdevice_bind script
  ansible.builtin.template:
    src: loopdevice_bind.j2
    dest: /sbin/loopdevice_bind
    mode: 0755

- name: copy the service file to storage node
  ansible.builtin.copy:
    src: ra_loopdevices.service
    dest: /lib/systemd/system/ra_loopdevices.service
    mode: 0755
  become: yes

- name: ensure that systemd service is enabled and restarted
  ansible.builtin.systemd:
    name: ra_loopdevices.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  become: yes

- name: list loop devices
  ansible.builtin.shell: >-
    set -o pipefail && losetup -l |grep diskimage |awk -F " " '{ print $6,$1}' |sort |awk -F " " '{ print $2}'
  args:
    executable: /bin/bash
  register: loopdevice_output
  changed_when: true

- name: generate new persistent volumes
  include_tasks: setup_fake_pvs.yml
  with_indexed_items:
    - "{{ loopdevice_output.stdout_lines }}"

- name: show loop device information
  ansible.builtin.debug:
    msg="{{ fake_pvs }}"

- name: set persistent volumes for storage component deployment
  ansible.builtin.set_fact:
    persistent_volumes: "{{ fake_pvs }}"
