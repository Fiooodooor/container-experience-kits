##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies
  include_role:
    name: install_dependencies

- name: configure Asymmetric Crypto service on QAT devices
  include_tasks: asymmetric_crypto_service_on_qat_confg.yml

- name: create configuration directory if it does not exist
  file:
    path: "{{ sriov_config_path }}"
    state: directory
    mode: '0700'
  become: yes

- name: remove existing configuration file if it exists
  file:
    path: "{{ sriov_config_path }}/bmra_sriov_qat_numvfs"
    state: absent
  become: yes

- name: create file for QAT ids to create defined VFs
  file:
    path: "{{ sriov_config_path }}/bmra_sriov_qat_numvfs"
    state: touch
    owner: root
    group: root
    mode: '0700'
  become: yes

- name: fail if requested number of VFs is higher than supported for each QAT id
  assert:
    that: item.qat_sriov_numvfs | default(0)| int <= 16
    fail_msg: "each qat_sriov_numvfs support max 16 Vfs. Kindly modify qat_sriov_numvfs range <= 16 in host vars for qat_devices list defined per qat_dev"
  with_items: "{{ qat_devices }}"

- name: remove existing calculated VFs file if it exists
  file:
    path: "{{ sriov_config_path }}/bmra_sriov_qat_total_vfs"
    state: absent
  become: yes

- name: create calculated VFs config file
  file:
    path: "{{ sriov_config_path }}/bmra_sriov_qat_total_vfs"
    state: touch
    owner: root
    group: root
    mode: '0700'
  become: yes

- name: calculate total VFs as defined in host vars
  set_fact:
    total: "{{ total|default(0)|int + item.qat_sriov_numvfs | default(0)|int }}"
  with_items: "{{ qat_devices }}"

- debug:
    msg: "calculated VFs = {{ total }}"

- name: save total calculated VFs = {{ total }} to file
  shell: "echo {{ total }} > bmra_sriov_qat_total_vfs"
  args:
    chdir: "{{ sriov_config_path }}"
    executable: /bin/bash
  changed_when: true

- name: populate QAT vf template with vfs per bus location
  lineinfile:
    path: "{{ sriov_config_path }}/bmra_sriov_qat_numvfs"
    line: "{{ item.qat_id }} {{ item.qat_sriov_numvfs | default(0) }}"
    owner: root
    group: root
    mode: '0700'
  become: yes
  with_items: "{{ qat_devices }}"

- name: copy QAT SRIOV setup script to /usr/local/bin
  copy:
    src: "{{ role_path }}/files/bmra_sriov_qat_init"
    dest: /usr/local/bin/bmra_sriov_qat_init
    owner: root
    group: root
    mode: '0700'
  become: yes

- name: create systemd unit file
  template:
    src: bmra_sriov_qat_init.service.j2
    dest: /lib/systemd/system/bmra_sriov_qat_init.service
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: ensure that systemd service is enabled on startup and restarted to apply the configuration
  systemd:
    daemon_reload: yes
    enabled: yes
    state: restarted
    name: bmra_sriov_qat_init
  become: yes
