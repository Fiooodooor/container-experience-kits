##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies
  include_role:
    name: install_dependencies

- name: clone Intel Device Plugins repository
  git:
    repo: "{{ intel_dp_operator_git_url }}"
    version: "{{ intel_dp_operator_git_ref }}"
    dest: "{{ intel_dp_operator_dir }}"
    force: yes

- name: prepare and deploy cert-manager
  block:
    - name: create Helm charts directory if needed
      file:
        path: /usr/src/charts
        state: directory
        mode: 0755

    - name: check if cert-manager namespace exists
      command: kubectl get namespace {{ cert_manager_namespace }}
      register: ns_exists
      failed_when: no

    - name: create a namespace for cert-manager
      command: kubectl create namespace {{ cert_manager_namespace }}
      when: ns_exists.stderr is defined and "NotFound" in ns_exists.stderr

    - name: add the Jetstack helm repository
      command: helm repo add jetstack {{ cert_manager_repo }}

    - name: update local Helm chart repository cache
      command: helm repo update

    - name: install the cert-manager Helm chart
      command: >-
        helm upgrade -i cert-manager jetstack/cert-manager
        --namespace {{ cert_manager_namespace }}
        --version {{ cert_manager_version }}
        --set installCRDs=true
  when:
    - inventory_hostname == groups['kube-master'][0]

- name: wait for cert-manager to become fully available
  pause:
    seconds: 30

- name: prepare and deploy Intel Device Plugins Operator
  block:
    - name: set namespace for Intel Device Plugin Operator to {{ intel_dp_namespace }}
      lineinfile:
        path: "{{ intel_dp_operator_dir }}/deployments/operator/default/kustomization.yaml"
        regex: 'namespace: inteldeviceplugins-system'
        line: "namespace: {{ intel_dp_namespace }}"
        mode: 0644

    - name: install Intel Device Plugins Operator
      command: kubectl apply -k {{ intel_dp_operator_dir }}/deployments/operator/default
      register: result
      retries: 10
      delay: 5
      until: result is not failed
  when: inventory_hostname == groups['kube-master'][0]

- name: wait for Intel Device Plugin Operator to become fully available
  pause:
    minutes: 2
