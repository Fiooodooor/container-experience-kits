##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# this workaround is added because kmra-ctk deployment crash after restart and it need to be redepoyed
# it should be removed when KMRA team deliver version that can be restarted
- name: pause
  pause:
    minutes: 1

- name: check if kmra was installed
  shell: "set -o pipefail && kubectl get pods -n kmra | grep kmra-ctk"
  args:
    executable: /bin/bash
  register: kmra_status
  changed_when: false
  failed_when: false
  delegate_to: "{{ groups['kube_control_plane'][0] }}"
  run_once: true

- name: reinstall kmra-ctk if it was already installed and it crashed
  block:
    - name: import kmra vars
      include_vars: ../../kmra_install/defaults/main.yml

    - name: combine defaults and user provided vars
      set_fact:
        kmra: "{{ kmra_defaults | combine(kmra | default({}), recursive=True) }}"
      no_log: true

    - name: kmra cleanup
      include_tasks: ../../kmra_install/tasks/cleanup.yml

    - name: Wait for until kmra cleanup will finish
      shell: "set -o pipefail && kubectl get all -n kmra"
      args:
        executable: /bin/bash
      register: kmra_cleanup
      retries: 60
      delay: 10
      until: "'No resources found' in kmra_cleanup.stderr"
      changed_when: true
      failed_when: false

    - name: reinstall kmra using role
      include_role:
        name: kmra_install

    - name: Wait for until kmra-ctl is running
      shell: "set -o pipefail && kubectl get pods -n kmra | grep kmra-ctk"
      args:
        executable: /bin/bash
      register: kmra_installed
      retries: 60
      delay: 10
      until: "'Running' in kmra_installed.stdout"
      changed_when: true
      failed_when: false
  when:
    - "'kmra-ctk' in kmra_status.stdout"
    - "'Running' not in kmra_status.stdout"
  delegate_to: "{{ groups['kube_control_plane'][0] }}"
  run_once: true
