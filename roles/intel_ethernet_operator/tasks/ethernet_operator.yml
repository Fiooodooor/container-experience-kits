##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: clone Intel Ethernet Operator repository
  ansible.builtin.git:
    repo: "{{ intel_ethernet_operator_git }}"
    version: "{{ intel_ethernet_operator_git_ref }}"
    dest: "{{ intel_ethernet_operator_dir }}"
    force: true

- name: get GOPATH
  ansible.builtin.command: go env GOPATH
  register: gopath
  changed_when: false

# Workaoround to get IEO daemon image build working
- name: patch Intel Ethernet Operator Daemon Dockerfile
  ansible.builtin.replace:
    path: "{{ intel_ethernet_operator_dir }}/Dockerfile.daemon"
    regexp: 'libbpf\.so\.0'
    replace: 'libbpf.so.1'

# Workaround for IEO labeler build issue
- name: patch IEO Labeler to fix curl issue
  lineinfile:
    path: "{{ intel_ethernet_operator_dir }}/Dockerfile.labeler"
    regexp: "^RUN apk update && apk add --no-cache curl.*"
    line: "RUN apk update && apk add --no-cache curl"

- name: build Intel Ethernet Operator
  community.general.make:
    target: "{{ item }}"
    chdir: "{{ intel_ethernet_operator_dir }}"
    params:
      VERSION: "{{ intel_ethernet_operator_img_ver }}"
      IMAGE_REGISTRY: "{{ registry_local_address }}"
      IMGTOOL: "{{ 'docker' if container_runtime == 'docker' else 'podman' }}"
      TLS_VERIFY: "{{ intel_ethernet_operator_make_tls }}"
      TARGET_PLATFORM: "{{ intel_ethernet_operator_target_platform }}"
      UFT_IMAGE: "{{ uft_image }}:{{ uft_image_ver }}"
  register: ieo_build_status
  retries: 5
  delay: 120
  until:
    - "'Github rate-limiter failed the request.' not in ieo_build_status.stdout"
  environment:
    PATH: "{{ gopath.stdout }}/bin:/usr/local/go/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  loop:
    - build_all
    - push_all
    - catalog-build
    - catalog-push

- name: create Intel Ethernet Operator directory to store yaml files
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0644'
  loop:
    - "{{ intel_ethernet_operator_files_dir }}"
    - "{{ intel_ethernet_operator_packages_dir }}"
    - "{{ intel_ethernet_operator_fw_files_dir }}"
    - "{{ intel_ethernet_operator_ddp_files_dir }}"
    - "{{ intel_ethernet_operator_flow_config_files_dir }}"
    - "{{ intel_ethernet_operator_flow_config_rules_dir }}"

- name: create Intel Ethernet Operator namespace
  kubernetes.core.k8s:
    name: "{{ intel_ethernet_operator_namespace }}"
    kind: Namespace
    state: present

- name: populate Intel Ethernet Operator yaml files and push to controller node
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ (intel_ethernet_operator_files_dir, item.dst) | path_join }}"
    force: true
    mode: preserve
  loop:
    - {src: 'catalog.yml.j2', dst: 'catalog.yml'}
    - {src: 'operator-group.yml.j2', dst: 'operator-group.yml'}
    - {src: 'subscription.yml.j2', dst: 'subscription.yml'}

- name: Deploy Catalog source and OperatorGroup
  kubernetes.core.k8s:
    state: present
    src: "{{ (intel_ethernet_operator_files_dir, item) | path_join }}"
  loop:
    - catalog.yml
    - operator-group.yml

- name: wait for Catalog source to be running
  kubernetes.core.k8s_info:
    api_version: "operators.coreos.com/v1alpha1"
    kind: CatalogSource
    namespace: "{{ intel_ethernet_operator_namespace }}"
    name: intel-ethernet-operators
  register: catalog_info
  retries: 12
  delay: 5
  until: |
    catalog_info.resources is defined and
    catalog_info.resources | length != 0 and
    catalog_info.resources[0].status.connectionState.lastObservedState | default("NOTREADY") == "READY"

- name: create Subscription
  kubernetes.core.k8s:
    state: present
    src: "{{ (intel_ethernet_operator_files_dir, 'subscription.yml') | path_join }}"

- name: wait for Ethernet Operator deployment
  kubernetes.core.k8s_info:
    kind: InstallPlan
    namespace: "{{ intel_ethernet_operator_namespace }}"
    wait: true
    wait_condition:
      type: Installed
    wait_timeout: 240

- name: Check if pods are running
  ansible.builtin.include_role:
    name: wait_for_kubernetes_ready
