##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
- name: Delete container registry deployment
  kubernetes.core.helm:
    release_name: "{{ registry_release_name }}"
    release_namespace: "{{ registry_namespace }}"
    state: absent
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Delete container registry persistent volume
  kubernetes.core.k8s:
    namespace: "{{ registry_namespace }}"
    name: "{{ registry_pv_name }}"
    kind: "PersistentVolume"
    state: absent
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Delete container registry persistent volume claim
  kubernetes.core.k8s:
    namespace: "{{ registry_namespace }}"
    name: "{{ registry_pvc_name }}"
    kind: "PersistentVolumeClaim"
    state: absent
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Delete container registry CSR
  kubernetes.core.k8s:
    namespace: "{{ registry_namespace }}"
    name: "{{ registry_csr_name }}"
    kind: "CertificateSigningRequest"
    state: absent
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Delete container registry tls secret
  kubernetes.core.k8s:
    name: "{{ registry_tls_secret_name }}"
    namespace: "{{ registry_namespace }}"
    kind: "Secret"
    state: absent
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Delete container registry htpasswd secret
  kubernetes.core.k8s:
    name: "{{ registry_htpasswd_secret_name }}"
    namespace: "{{ registry_namespace }}"
    kind: "Secret"
    state: absent
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Delete container registry PV directory
  ansible.builtin.file:
    path: "{{ registry_storage_dir }}"
    state: absent
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Delete container registry files
  ansible.builtin.file:
    path: "{{ registry_root_dir }}"
    state: absent
  when: inventory_hostname == groups['kube_control_plane'][0]
