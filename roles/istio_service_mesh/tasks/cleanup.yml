##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: find existing istioctl pod
  command: |
    kubectl get pods \
    --namespace {{ istio_service_mesh.istio_namespace }} \
    -l "app.kubernetes.io/name=istioctl,app.kubernetes.io/instance=istioctl" \
    -o jsonpath="{.items[0].metadata.name}"
  register: istioctl_pod
  failed_when: false
  changed_when: true

- name: remove existing istio resources
  command: |
    kubectl exec \
    --namespace {{ istio_service_mesh.istio_namespace }} \
    {{ istioctl_pod.stdout }} -- istioctl x uninstall --purge -y
  failed_when: false
  changed_when: true
  when:
    - istioctl_pod.stderr | length == 0

- name: remove existing istioctl deployment
  command: "helm delete istioctl --namespace {{ istio_service_mesh.istio_namespace }}"
  changed_when: true
  failed_when: false

- name: remove existing tcpip-bypass-ebpf resources
  command: "kubectl delete -f {{ (istio_service_mesh_charts_dir, 'tcpip-bypass-ebpf.yaml') |  path_join }}"
  changed_when: true
  failed_when: false

- name: remove existing intel-tls-splicing resources
  command: "kubectl delete -f {{ (istio_service_mesh_charts_dir, 'intel-tls-splicing.yaml') |  path_join }}"
  changed_when: true
  failed_when: false

- name: remove existing tcs cluster issuer
  command: "kubectl delete -f {{ (istio_service_mesh_charts_dir, 'tcs-cluster-issuer.yaml') |  path_join }}"
  changed_when: true
  failed_when: false

- name: remove existing external CA secret
  kubernetes.core.k8s:
    api_version: v1
    kind: Secret
    name: external-ca-cert
    namespace: "{{ istio_service_mesh.istio_namespace }}"
    state: absent

- name: wait for termination of all istio pods
  command: |
    kubectl get pods \
    --namespace {{ istio_service_mesh.istio_namespace }}
  register: istio_pods_termination
  retries: 30
  delay: 10
  until: istio_pods_termination.stdout | length == 0
  failed_when: false
  changed_when: true

- name: remove istio-system namespace
  kubernetes.core.k8s:
    name: "{{ istio_service_mesh.istio_namespace }}"
    api_version: v1
    kind: Namespace
    state: absent

- name: remove istio custom manifests directory
  file:
    path: "{{ istio_service_mesh_charts_dir }}"
    state: absent
  failed_when: false

- name: remove istio release directory
  file:
    path: "{{ istio_service_mesh_release_dir }}"
    state: absent
  failed_when: false

- name: wait for istio-system namespace removal
  command: |
    kubectl get ns {{ istio_service_mesh.istio_namespace }}
  register: istio_ns_removal
  retries: 30
  delay: 10
  until: istio_ns_removal.stdout | length == 0
  failed_when: false
  changed_when: true
