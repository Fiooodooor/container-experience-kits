##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- block:
    - name: create xpumanager namespace
      kubernetes.core.k8s:
        name: "{{ xpumanager_namespace }}"
        api_version: v1
        kind: Namespace
        state: present

    - name: generate ssl certificate
      include_role:
        name: create_signed_k8s_certs
      vars:
        secret_name: "{{ rbac_proxy_ssl_secret_name }}"
        service_name: intel-xpumanager
        key_pair_name: xpumanager-rbac-proxy
        host_secrets_folder: "{{ rbac_proxy_ssl_mount_path }}"
        k8s_namespace: "{{ xpumanager_namespace }}"
        csr_cluster_name: "{{ cluster_name | default('cluster.local') }}"

    - name: deploy xpumanager
      kubernetes.core.k8s:
        state: present
        template: "{{ item }}"
      loop:
        - "xpumanager_service.yml.j2"
        - "xpumanager_daemonset.yml.j2"
        - "xpumanager_servicemonitor.yml.j2"
        - "prometheus_role.yml.j2"
        - "prometheus_rolebinding.yml.j2"
  when:
    - kubernetes | default(false) | bool


- block:
    - name: create xpumanager folder
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ xpumanager_path }}"

    - name: generate xpumanager private key (RSA, 4096 bits)
      community.crypto.openssl_privatekey:
        path: "{{ xpumanager_key_path }}"

    - name: generate xpumanager certificates signing request
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ xpumanager_key_path }}"
        common_name: "xpumanager"
        subject_alt_name:
          - "DNS:xpumanager"
          - "IP:127.0.0.1"
      register: csr

    - name: create self-signed certificate from CSR
      community.crypto.x509_certificate:
        path: "{{ xpumanager_cert_path }}"
        csr_content: "{{ csr.csr }}"
        privatekey_path: "{{ xpumanager_key_path }}"
        provider: selfsigned

    - name: check whether gpu is ready by checking dri folder
      ansible.builtin.stat:
        path: /dev/dri
      register: dri_folder

    - name: set xpumanager state to start if gpu ready
      set_fact:
        xpumanager_state: started
      when:
        - dri_folder.stat.exists

    - name: set xpumanager state to present if gpu not ready
      set_fact:
        xpumanager_state: present
      when:
        - not dri_folder.stat.exists

    - name: create or start xpumanager container
      docker_container:
        name: xpumanager
        image: "{{ xpumanager_image }}:{{ xpumanager_version }}"
        state: "{{ xpumanager_state }}"
        restart_policy: always
        user: root
        cap_drop:
          - all
        capabilities:
          - sys_admin
        devices:
          - "/dev/dri:/dev/dri"
        ports:
          - "127.0.0.1:29999:29999"
        networks:
          - name: telemetry
            aliases:
              - xpumanager
        volumes:
          - "{{ xpumanager_cert_path }}:/usr/lib/xpum/rest/conf/cert.pem"
          - "{{ xpumanager_key_path }}:/usr/lib/xpum/rest/conf/key.pem"
        env:
          XPUM_EXPORTER_NO_AUTH: "1"
          XPUM_EXPORTER_ONLY: "1"
          XPUM_METRICS: "0-38"

  when:
    - not kubernetes | default(false) | bool
    - container_runtime == 'docker'
