apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: {{ prometheus_stack_version }}
  name: k8s
  namespace: monitoring
spec:
  containers:
  - name: prometheus
    image: quay.io/prometheus/prometheus:v{{ prometheus_stack_version }}
    args:
    - --web.console.templates=/etc/prometheus/consoles
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
    - --storage.tsdb.path=/persistent-volume
    - --storage.tsdb.retention.time=24h
    - --web.enable-lifecycle
    - --storage.tsdb.no-lockfile
    - --web.route-prefix=/
    volumeMounts:
      - name: persistent-volume-prometheus
        readOnly: false
        mountPath: /persistent-volume
{% if prometheus_srv_expose | default(false) %}
  - name: nginx
    image: {{ prometheus_srv_nginx_image }}
    ports:
      - containerPort: {{ prometheus_srv_proxy_port }}
        name: nginx-https
    volumeMounts:
      - name: tls
        mountPath: "/etc/nginx/conf.d/"
      - name: nginx-conf
        mountPath: /etc/nginx
      - name: htpasswd
        mountPath: "/etc/nginx/conf.d/auth"
      - name: prometheus-srv-tmp-vol
        mountPath: "/tmp"
{% endif %}
  alerting:
    alertmanagers:
    - apiVersion: v2
      name: alertmanager-main
      namespace: monitoring
      port: web
  enableFeatures: []
  externalLabels: {}
  nodeSelector:
    kubernetes.io/os: linux
  podMetadata:
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: {{ prometheus_stack_version }}
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  probeNamespaceSelector: {}
  probeSelector: {}
  replicas: 1
  resources:
    requests:
      memory: 400Mi
  ruleNamespaceSelector: {}
  ruleSelector: {}
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  version: {{ prometheus_stack_version }}
  volumes:
    - name: persistent-volume-prometheus
      persistentVolumeClaim:
        claimName: prometheus-pvc
{% if prometheus_srv_expose | default(false) %}
    - name: prometheus-srv-tmp-vol
      emptyDir: {}
    - name: htpasswd
      secret:
        secretName: prometheus-srv-basic-auth-secret
    - name: tls
      secret:
        secretName: prometheus-srv-ssl
    - name: nginx-conf
      configMap:
        name: prometheus-srv-nginx-conf
        items:
          - key: nginx.conf
            path: nginx.conf
{% endif %}