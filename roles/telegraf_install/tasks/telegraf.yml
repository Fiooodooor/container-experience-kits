##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: create Helm charts directory if needed
  ansible.builtin.file:
    path: "{{ (project_root_dir, 'charts') | path_join }}"
    state: directory
    mode: 0755

- name: copy telegraf Helm chart to the controller node
  ansible.builtin.copy:
    src: "{{ role_path }}/charts/telegraf/" # Copy contentx of charts/telegraf
    dest: "{{ telegraf_chart_path }}"
    mode: 0755

- name: prepare PMU events definitions
  ansible.builtin.include_tasks: pmu_events.yml

- name: template all telegraf configuration options
  ansible.builtin.set_fact:
    telegraf_plugins_config: "{{ lookup('ansible.builtin.template', 'telegraf_plugins_conf.yml.j2') | from_yaml }}"

- name: build telegraf configuration based on current RA profile
  ansible.builtin.set_fact:
    telegraf_config: "{{ telegraf_config | default('') + telegraf_plugins_config[telegraf_plugin] }}" # add enabled plugin section to config
  loop: "{{ telegraf_config_profiles[profile_name] | flatten }}" # select plugins enabled for current RA profile
  loop_control:
    loop_var: telegraf_plugin

- name: print out effective telegraf config
  ansible.builtin.debug:
    msg: |
      Effective telegraf configuration to use:
      {{ telegraf_config }}

- name: populate values.yaml template with values
  ansible.builtin.template:
    src: "values.yaml.j2"
    dest: "{{ telegraf_helm_values_file }}"
    force: yes
    mode: preserve

- name: install telegraf helm chart
  kubernetes.core.helm:
    chart_ref: "{{ telegraf_chart_path }}"
    name: "{{ telegraf_release_name }}"
    namespace: "{{ telegraf_namespace }}"
    create_namespace: true
    values_files:
      - "{{ telegraf_helm_values_file }}"
    wait: true
