##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install RHEL7/CentOS7 workarounds
  block:
    - name: install Python3 from epel-release
      package:
        name:
          - python36
          - python36-devel
        enablerepo: "epel"

    - name: download pkg-config src
      unarchive:
        src: "{{ pkg_config_url }}"
        dest: "/usr/src"
        remote_src: yes
        list_files: yes
        mode: 0755
      register: pkg_config_download

    - name: set local pkg-config directory path
      set_fact:
        pkg_config_dir: "{{ pkg_config_download.dest  }}/{{ pkg_config_download.files[0] }}"

    - name: configure pkg-config
      command: ./configure --with-internal-glib
      args:
        chdir: "{{ pkg_config_dir }}"

    - name: build pkg-config
      make:
        chdir: "{{ pkg_config_dir }}"

    - name: install pkg-config
      make:
        chdir: "{{ pkg_config_dir }}"
        target: install
  when:
    - ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'
    - ansible_distribution_version < '8'

- name: assert that hugepages are enabled
  assert:
    that: hugepages_enabled | default(false)
    fail_msg: "Hugepages are disabled. Please configure hugepages in the host vars or disable OVS-DPDK installation."

- name: clone OVS git repository
  git:
    repo: '{{ ovs_repo }}'
    dest: '{{ ovs_dir }}'
    version: '{{ ovs_version | default("master") }}'
    force: yes
  register: ovs_changed

- name: check whether bootstrap is required
  stat: path={{ ovs_dir }}/configure
  register: ovs_config_status

- name: bootstrap OVS
# noqa 503 - more than one condition, can't be a handler
  command: ./boot.sh
  args:
    chdir: "{{ ovs_dir }}"
  when: not ovs_config_status.stat.exists or (ovs_rebuild is defined) or ovs_changed.changed

- name: Check if OVS Makefile exists
  stat: path={{ ovs_dir }}/Makefile
  register: ovs_makefile_status

- name: Set dpdk binding type for DPDK >= 20.08
  set_fact:
    dpdk_build: "static"
  when: dpdk_version is version("20.08", ">=")

- name: install dpdk-devel to prepare OVS-DPDK build in RHEL / CentOS >= 8.2
  dnf:
    name: dpdk-devel
  when: ansible_distribution in ["RedHat", "CentOS"] and ansible_distribution_version >= '8.2'

- name: update the dynamic linker cache in RHEL / CentOS >= 8.2
  command: "ldconfig"
  when: ansible_distribution in ["RedHat", "CentOS"] and ansible_distribution_version >= '8.2'
  changed_when: true

- name: prepare OVS-DPDK build in RHEL / CentOS >= 8.2
  command: ./configure --with-dpdk=yes CFLAGS="-g -O2 -Wno-cast-align"
  args:
    chdir: "{{ ovs_dir }}"
  environment:
    PKG_CONFIG_PATH: "/usr/local/lib64/pkgconfig:/usr/share/pkgconfig:/usr/lib64/pkgconfig"
  when:
    - ansible_distribution in ["RedHat", "CentOS"] and ansible_distribution_version >= '8.2'
    - not ovs_makefile_status.stat.exists or (ovs_rebuild is defined) or ovs_changed.changed

- name: prepare OVS-DPDK build
# noqa 503 - more than one condition, can't be a handler
  command: ./configure --with-dpdk={{ dpdk_build }} CFLAGS="-g -O2 -Wno-cast-align"
  args:
    chdir: "{{ ovs_dir }}"
  environment:
    PKG_CONFIG_PATH: "/usr/local/lib64/pkgconfig:/usr/share/pkgconfig:/usr/lib64/pkgconfig"
  when:
    - (ansible_distribution == 'Ubuntu') or
      (ansible_distribution == 'CentOS' and ansible_distribution_version <= '7.9')
    - not ovs_makefile_status.stat.exists or (ovs_rebuild is defined) or ovs_changed.changed

- name: check if OVS distribution files exists
  stat: path={{ ovs_dir }}/distfiles
  register: ovs_distfiles_status

- name: build OVS-DPDK
# noqa 503 - more than one condition, can't be a handler
  make:
    chdir: "{{ ovs_dir }}"
    params:
      CFLAGS: '-O3 -march=native'
  when: not ovs_distfiles_status.stat.exists or (ovs_rebuild is defined) or ovs_changed.changed

- name: Check if OVS tools are installed
  stat: path=/usr/local/bin/ovsdb-tool
  register: ovs_tools_status

- name: install OVS-DPDK
# noqa 503 - more than one condition, can't be a handler
  make:
    target: install
    chdir: "{{ ovs_dir }}"
  when: not ovs_tools_status.stat.exists or (ovs_rebuild is defined) or ovs_changed.changed

- name: create OVS folders
  file: path={{ item }} state=directory mode=0755
  with_items:
    - /usr/local/etc/openvswitch
    - /usr/local/var/run/openvswitch

- name: clear database configuration if required
# noqa 503 - more than one condition, can't be a handler
  file:
    path: /usr/local/etc/openvswitch/conf.db
    state: absent
  when: ovs_rebuild is defined or ovs_changed.changed

- name: check if database configuration exists
  stat: path=/usr/local/etc/openvswitch/conf.db
  register: ovs_dbconfig_status

- name: create database configuration
  command: '/usr/local/bin/ovsdb-tool create /usr/local/etc/openvswitch/conf.db /usr/local/share/openvswitch/vswitch.ovsschema'
  when: not ovs_dbconfig_status.stat.exists

- name: start OVS database server
  command: '/usr/local/share/openvswitch/scripts/ovs-ctl --no-ovs-vswitchd start'
  environment:
    OVS_RUNDIR: /usr/local/var/run/openvswitch
  changed_when: true

- name: set OVS dpdk-socket-mem
  command: '/usr/local/bin/ovs-vsctl --no-wait set Open_vSwitch . other_config:dpdk-socket-mem="{{ ovs_dpdk_socket_mem  }}"'
  changed_when: true

- name: set OVS dpdk-init
  command: '/usr/local/bin/ovs-vsctl --no-wait set Open_vSwitch . other_config:dpdk-init=true'
  changed_when: true

- name: set OVS pmd-cpu-mask
  command: '/usr/local/bin/ovs-vsctl --no-wait set Open_vSwitch . other_config:pmd-cpu-mask={{ ovs_dpdk_pmd_mask }}'
  changed_when: true

- name: set OVS dpdk-lcore-mask
  command: '/usr/local/bin/ovs-vsctl --no-wait set Open_vSwitch . other_config:dpdk-lcore-mask={{ ovs_dpdk_lcore_mask }}'
  changed_when: true

- name: start OVS vswitchd
  command: /usr/local/share/openvswitch/scripts/ovs-ctl --no-ovsdb-server --db-sock="/usr/local/var/run/openvswitch/db.sock" restart
  environment:
    OVS_RUNDIR: /usr/local/var/run/openvswitch
  changed_when: true

- name: create OVS bridge
  command: /usr/local/bin/ovs-vsctl --may-exist add-br br0 -- set bridge br0 datapath_type=netdev
  changed_when: true
