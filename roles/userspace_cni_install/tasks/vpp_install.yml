##
##   Copyright (c) 2020 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies on Red Hat
  package:
    name:
      - pygpgme
      - yum-utils
    state: present
  when: ansible_os_family == "RedHat"

- name: add fdio repo gpg key
  apt_key:
    url: "https://packagecloud.io/fdio/{{ vpp_version }}/gpgkey"
    state: present
  when: ansible_os_family == "Debian"

- name: setup vpp repo for Ubuntu
  template:
    src: 99fd.io.list
    dest: /etc/apt/sources.list.d/99fd.io.list
    mode: preserve
  when: ansible_os_family == "Debian"
  register: vpp_sh_deb

- name: setup vpp repo on Red Hat
  template:
    src: fdio.repo
    dest: /etc/yum.repos.d/fdio.repo
    mode: preserve
  when: ansible_os_family == "RedHat"
  register: vpp_sh_rh

- name: capture sysctl configuration
  command: sysctl -n kernel.shmmax vm.max_map_count
  register: original_sysctl
  changed_when: false

- name: calc intermediate VPP sysctl entries values
  set_fact:
    vpp_orig_shmmax: "{{ original_sysctl.stdout_lines[0] }}"
    vpp_orig_max_map_count: "{{  original_sysctl.stdout_lines[1] }}"
    vpp_calc_shmmax: "{{ (default_hugepage_size == '2M') | ternary(hugepages_2M*2048*1024, hugepages_1G*1024*1024*1024) }}"
    vpp_calc_max_map_count: "{{ (default_hugepage_size == '2M') | ternary(hugepages_2M*3, hugepages_1G*3) }}"

- name: pick final sysctl entries values
  set_fact:
    vpp_nr_hugepages: "{{  (default_hugepage_size == '2M') | ternary(hugepages_2M, hugepages_1G) }}"
    vpp_shmmax: "{{ [vpp_calc_shmmax|int, vpp_orig_shmmax|int] | max }}"
    vpp_max_map_count: "{{ [vpp_orig_max_map_count|int, vpp_calc_max_map_count|int] | max }}"

- name: install vpp packages on Red Hat
  package:
    name:
      - vpp
      - vpp-plugins
      - vpp-devel
      - vpp-api-python
      - vpp-api-lua
    state: present
  when: ansible_os_family == "RedHat"

- name: install vpp packages on Debian
  apt:
    update_cache: yes
    name:
      - vpp
      - vpp-dev
      - libvppinfra
      - vpp-plugin-core
      - vpp-dbg
      - vpp-api-python
      - vpp-api-java
    state: present
  when: ansible_os_family == "Debian"

- name: write sys config with hugepages and memory settings
  template:
    src: 80-vpp.conf.j2
    dest: /etc/sysctl.d/80-vpp.conf
    mode: preserve

- name: apply sysctl config
  command: sysctl -p --load=/etc/sysctl.d/80-vpp.conf
  changed_when: true

# NOTE: questions:
#       do we need to update vpp config to apply some optimizations?
#       attach NIC ports based on the user configuration?
#       run vpp in the CMK context?

- name: Restart VPP service
  systemd:
    name: vpp
    state: restarted
    daemon_reload: yes
