##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: clone TAC repo
  git:
    repo: "{{ tac_git_repo_url }}"
    dest: "{{ tac_git_path }}"
    version: "{{ tac_git_version }}"
    force: true

- name: update Makefile with proper tag
  replace:
    path: "{{ (tac_git_path, 'Makefile') | path_join }}"
    regexp: '^IMG_TAG.*$'
    replace: 'IMG_TAG ?= {{ tac_image_tag }}'
    mode: 0644

- name: read AppHSM client mTLS credentials
  shell: |-
    set -o pipefail && \
    kubectl get secret {{ tac.client_mtls_secret_name }} \
    -n {{ tac.client_mtls_secret_namespace }} \
    -o json | jq '.data'
  args:
    executable: /bin/bash
  register: mtls_data
  changed_when: false
  no_log: true

- name: update client CA cert namespace line
  lineinfile:
    path: "{{ (tac_git_path, 'config', 'plugins', 'kmra', 'kmra-secrets.yaml') | path_join }}"
    regexp: '^  namespace:.*$'
    line: "  namespace: {{ tac.namespace }}"
    state: present
    mode: 0644

- name: update client CA cert line
  lineinfile:
    path: "{{ (tac_git_path, 'config', 'plugins', 'kmra', 'kmra-secrets.yaml') | path_join }}"
    regexp: '^  ca.crt:.*$'
    line: "  ca.crt: {{ (mtls_data.stdout | from_json)['ca.cert'] }}"
    state: present
    mode: 0644

- name: update TAC config - client cert line
  lineinfile:
    path: "{{ (tac_git_path, 'config', 'plugins', 'kmra', 'kmra-secrets.yaml') | path_join }}"
    regexp: '^  client.crt:.*$'
    line: "  client.crt: {{ (mtls_data.stdout | from_json)['tls.cert'] }}"
    state: present
    mode: 0644

- name: update TAC config - client key line
  lineinfile:
    path: "{{ (tac_git_path, 'config', 'plugins', 'kmra', 'kmra-secrets.yaml') | path_join }}"
    regexp: '^  client.key:.*$'
    line: "  client.key: {{ (mtls_data.stdout | from_json)['tls.key'] }}"
    state: present
    mode: 0644

- name: update TAC config - AppHSM address
  lineinfile:
    path: "{{ (tac_git_path, 'config', 'plugins', 'kmra', '.key-server.conf') | path_join }}"
    regexp: '^KEY_SERVER=.*$'
    line: "KEY_SERVER={{ tac.apphsm_hostname | trim }}:{{ tac.apphsm_port }}"
    state: present
    mode: 0644

- name: update TAC config - kustomization plugins file
  lineinfile:
    path: "{{ (tac_git_path, 'config', 'plugins', 'kmra', 'kustomization.yaml') | path_join }}"
    regexp: '^  namespace:.*$'
    line: "  namespace: {{ tac.namespace }}"
    state: present
    mode: 0644

- name: update TAC config - kustomization  default file
  lineinfile:
    path: "{{ (tac_git_path, 'config', 'default', 'kustomization.yaml') | path_join }}"
    regexp: '^namespace:.*$'
    line: "namespace: {{ tac.namespace }}"
    state: present
    mode: 0644

- name: create tac namespace
  k8s:
    name: "{{ tac.namespace }}"
    kind: Namespace
    state: present

- name: deploy TAC
  make:
    target:
      deploy-kmra
    chdir: "{{ tac_git_path }}"
  environment:
    REGISTRY: "{{ (tac.build_image_locally) | ternary(registry_local_address, 'docker.io') }}"
    IMG_TAG: "{{ tac_image_tag }}"
