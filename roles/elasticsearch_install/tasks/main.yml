##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
- name: Deploy elasticsearch
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
  block:
    - name: create storage directory
      ansible.builtin.file:
        path: "/etc/elasticsearch"
        state: directory
        owner: root
        group: root
        mode: 0744
      delegate_to: "{{ groups['kube_node'][0] }}"

    - name: create elasticsearch directory
      ansible.builtin.file:
        state: directory
        dest: "{{ (project_root_dir, 'elasticsearch') | path_join }}"
        mode: 0755

    - name: copy elasticsearch files
      ansible.builtin.copy:
        src: files/
        dest: "{{ (project_root_dir, 'elasticsearch') | path_join }}"
        owner: root
        group: root
        mode: 0744

    # fix for core detection in the elasticsearch
    - block:
        - name: check if we are running single-node deployment
          shell: set -o pipefail && kubectl get nodes | awk 'NR !=1 { print }'
          args:
            executable: /bin/bash
          register: node_check
          changed_when: false

        - name: get number of cores - control plane
          command: nproc
          register: number_of_cores
          when: node_check.stdout_lines | length == 1

        - set_fact: nproc_output="{{ number_of_cores }}"
          when: number_of_cores.changed

        - name: get number of cores - worker node
          command: nproc
          register: number_of_cores
          delegate_to: "{{ groups['kube_node'][0] }}"
          when: node_check.stdout_lines | length > 1

        - set_fact: nproc_output="{{ number_of_cores }}"
          when: number_of_cores.changed

    - name: populate elasticsearch files and push to controller node
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ project_root_dir }}/elasticsearch/{{ item | basename | regex_replace('.j2','') }}"
        force: yes
        mode: preserve
      with_fileglob:
        - ../templates/*.j2

    - name: create monitoring namespace
      kubernetes.core.k8s:
        name: "monitoring"
        kind: Namespace
        state: present

    - name: create elasticsearch resources
      kubernetes.core.k8s:
        state: present
        src: "{{ (project_root_dir, 'elasticsearch', item) | path_join }}"
      loop:
        - elasticsearch_certs.yml
        - elasticsearch_storageclass.yml
        - elasticsearch_pv.yml

    - name: add elasticsearch chart repo
      kubernetes.core.helm_repository:
        name: "{{ elasticsearch_chart_name }}"
        repo_url: "{{ elasticsearch_chart_repo }}"

    - name: deploy elasticsearch
      kubernetes.core.helm:
        chart_ref: "elastic/elasticsearch"
        chart_version: "{{ elasticsearch_chart_version }}"
        release_name: "{{ elasticsearch_release_name }}"
        release_namespace: "{{ elasticsearch_namespace }}"
        values_files: "{{ (project_root_dir, 'elasticsearch', 'elasticsearch_values.yml') | path_join }}"
        wait: true
        timeout: 15m0s
