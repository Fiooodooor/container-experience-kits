---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-stack-settings-script
  namespace: monitoring
data:
  elastic-stack-settings.sh: |
    #!/bin/sh

    apk add --no-cache curl jq

    sleep 300

    UNAVAILABLE=true

    while $UNAVAILABLE; do
            status=$(curl -s -k -XGET \
                          --user "${ELASTIC_USERNAME}:${ELASTIC_PASS}" \
                          https://elasticsearch-master.monitoring.svc.cluster.local:9200/_cluster/health | jq '.status' | tr -d '"')
            if [[ "$status" == "green" || "$status" == "yellow" ]]; then
                    UNAVAILABLE=false
            else
                    echo "Elasticsearch stack is not ready. Trying again after 30s..."
                    sleep 30
            fi
    done

    result=$(curl -s -k -XPUT \
                  --user "${ELASTIC_USERNAME}:${ELASTIC_PASS}" \
                  -H "Content-Type: application/json" \
                  https://elasticsearch-master.monitoring.svc.cluster.local:9200/_all/_settings?preserve_existing=true \
                  -d '{"index.auto_expand_replicas": "0-all", "index.number_of_replicas": "1"}' | jq '.acknowledged')

    if [ "$result" == true ]; then
            exit 0
    else
            echo "Elasticstack replicas settings was not set properly."
            exit 1
    fi
---
apiVersion: v1
kind: Pod
metadata:
  name: elasticsearch-stack-settings
  namespace: monitoring
spec:
  restartPolicy: OnFailure
  containers:
  - name: elasticsearch-stack-settings
    image: alpine:3.18
    command: ["/root/elastic-stack-settings.sh"]
    env:
{% if "http_proxy" in proxy_env %}
    - name: http_proxy
      value: {{ proxy_env.http_proxy }}
{% endif %}
{% if "https_proxy" in proxy_env %}
    - name: https_proxy
      value: {{ proxy_env.https_proxy }}
{% endif %}
{% if "no_proxy" in proxy_env %}
    - name: no_proxy
      value: {{ proxy_env.no_proxy }}
{% endif %}
    - name: ELASTIC_PASS
      valueFrom:
        secretKeyRef:
          name: elasticsearch-master-credentials
          key: password
    - name: ELASTIC_USERNAME
      valueFrom:
        secretKeyRef:
          name: elasticsearch-master-credentials
          key: username
    volumeMounts:
      - name: elasticsearch-stack-settings-script
        mountPath: "/root/"
  volumes:
    - name: elasticsearch-stack-settings-script
      configMap:
        name: elasticsearch-stack-settings-script
        defaultMode: 0500
        items:
          - key: elastic-stack-settings.sh
            path: elastic-stack-settings.sh
