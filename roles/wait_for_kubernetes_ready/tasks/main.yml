##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- delegate_to: "{{ groups['kube_control_plane'][0] }}"
  run_once: true
  block:
    - name: Wait for kube api to be up
      ansible.builtin.uri:
        url: "https://127.0.0.1:6443/healthz"
        validate_certs: no
        use_proxy: no
      register: kube_api
      until: kube_api.status == 200
      retries: 10
      delay: 2

    - name: show all nodes on kubernetes cluster
      command: kubectl get nodes
      changed_when: false
      register: get_nodes_output
      until: get_nodes_output.rc == 0
      retries: 10
      delay: 2

    - name: wait for kubernetes nodes to be ready
      kubernetes.core.k8s_info:
        kind: Node
        wait: true
        wait_condition:
          type: Ready
        wait_timeout: 600
      no_log: true # produce long output with sensitive ifno

    - name: show all pods on kubernetes cluster
      command: kubectl get pods -A -o wide
      changed_when: false
      register: get_pods_output
      until: get_pods_output.rc == 0
      retries: 10
      delay: 2

    # Descirption of check:
    # All pods must have set all status conditions to "True" except
    # of conditions that have reason set to "PodCompleted" (Pods created from Job).
    - name: wait for pods to be ready
      kubernetes.core.k8s_info:
        kind: Pod
      register: pods_status
      retries: 30
      delay: 10
      until: |
        pods_status.failed or
        (
          (
            pods_status.resources
            | map(attribute='status')
            | rejectattr('conditions', 'defined')
            | list | length == 0
          )
          and "False" not in
          (
            pods_status.resources
            | map(attribute='status')
            | selectattr('conditions', 'defined')
            | map(attribute='conditions')
            | flatten
            | rejectattr('reason', 'defined') | list
            | union(
              pods_status.resources
              | map(attribute='status')
              | map(attribute='conditions')
              | flatten
              | selectattr('reason', 'defined')
              | selectattr('reason', '!=', 'PodCompleted')
              | list
            )
            | map(attribute='status')
          )
        )
      failed_when: pods_status.failed
      no_log: true # produces long output with sensitive info

    - name: report pods that are not ready
      vars:
        pod_resources: "{{ pods_status.resources }}"
      fail:
        msg: |
          Following pods failed to get ready:

          {{ lookup('ansible.builtin.template', 'failed_pods.j2') }}
      when: pods_status.failed
