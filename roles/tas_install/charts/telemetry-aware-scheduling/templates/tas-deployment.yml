apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "telemetry-aware-scheduling.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "telemetry-aware-scheduling.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "telemetry-aware-scheduling.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "telemetry-aware-scheduling.labels" . | indent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "telemetry-aware-scheduling.serviceAccountName" . }}
      tolerations:
        - key: cmk
          operator: Equal
          effect: NoSchedule
          value: "true"
      containers:
      - name: tas-controller
        command:
        - /controller
        - --syncPeriod=2s
        image: "{{ .Values.controllerImage.repository }}:{{ .Values.controllerImage.tag }}"
        securityContext:
          runAsUser: 10001
        imagePullPolicy: {{ .Values.controllerImage.pullPolicy }}
      - name: tas-extender
        command:
        - /extender
        - --cacheEndpoint=http://127.0.0.1:8111/cache/
        {{- if .Values.tls.enabled }}
        - --cert={{ .Values.tls.tas_ssl_mount_path }}/{{ .Values.tls.secretName }}.cert
        - --key={{ .Values.tls.tas_ssl_mount_path }}/{{ .Values.tls.secretName }}.key
        {{- else }}
        - --unsafe
        {{- end }}
        image: "{{ .Values.extenderImage.repository }}:{{ .Values.extenderImage.tag }}"
        imagePullPolicy: {{ .Values.extenderImage.pullPolicy }}
        securityContext:
          runAsUser: 10001
        {{- if .Values.tls.enabled }}
        volumeMounts:
        - name: certs
          mountPath: {{ .Values.tls.tas_ssl_mount_path }}
      volumes:
      - name: certs
        secret:
          secretName: {{ .Values.tls.secretName }}
      {{- end}}
