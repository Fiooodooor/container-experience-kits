##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: Deploy opentelemetry
  when:
    - opentelemetry_enabled is defined and opentelemetry_enabled
    - inventory_hostname == groups['kube_control_plane'][0]
  block:
    - name: create namespace
      kubernetes.core.k8s:
        name: "{{ opentelemetry_operator_namespace }}"
        kind: Namespace
        state: present

    - name: create opentelemetry folder
      ansible.builtin.file:
        state: directory
        dest: "{{ (project_root_dir, 'opentelemetry') | path_join }}"
        mode: 0755

    - name: copy opentelemetry files
      ansible.builtin.copy:
        src: "files/"
        dest: "{{ (project_root_dir, 'opentelemetry') | path_join }}"
        mode: 0644

    - name: deploy opentelemetry operator
      kubernetes.core.helm:
        chart_repo_url: "{{ opentelemetry_repo }}"
        chart_ref: "{{ opentelemetry_operator_chart_name }}"
        chart_version: "{{ opentelemetry_operator_chart_version }}"
        create_namespace: true
        release_name: "{{ opentelemetry_operator_chart_name }}"
        release_namespace: "{{ opentelemetry_operator_namespace }}"
        wait: true
        values:
          kubeRBACProxy:
            enabled: true
            image:
              repository: "{{ kube_rbac_proxy_image_repo }}"
              tag: "{{ kube_rbac_proxy_image_tag }}"
              extraArgs:
                - --tls-cipher-suites="{{ kube_rbac_proxy_tls_ciphers }}"

    - name: wait for opentelemetry collector CRD
      kubernetes.core.k8s_info:
        kind: CustomResourceDefinition
        name: opentelemetrycollectors.opentelemetry.io
        wait: true
        wait_condition:
          type: Established
        wait_timeout: 120

    - name: get Elasticsearch credentials
      ansible.builtin.shell: >-
        kubectl get secrets --namespace=monitoring
        elasticsearch-master-credentials -ojsonpath='{.data.password}' | base64 -d
      args:
        executable: /bin/bash
      changed_when: false
      register: es_otel_credentials

    - name: template opentelemetry deployment file
      ansible.builtin.template:
        src: "otel-gateway.yml.j2"
        dest: "{{ (project_root_dir, 'opentelemetry', 'otel-gateway.yml') | path_join }}"
        mode: '0644'

    - name: create opentelemetry certs
      kubernetes.core.k8s:
        state: present
        src: "{{ (project_root_dir, 'opentelemetry', item) | path_join }}"
      loop:
        - otel-agent-telegraf-certs.yml
        - otel-gateway-certs.yml
        - otel-elasticsearch-certs.yml

    - name: wait for certs creation
      kubernetes.core.k8s_info:
        kind: Certificate
        name: "{{ item }}"
        namespace: monitoring
        wait: true
        wait_condition:
          type: Ready
        wait_timeout: 60
      loop:
        - otel-gateway-collector
        - otel-agent-telegraf
        - otel-elasticsearch-tls

    - name: create opentelemetry resources
      kubernetes.core.k8s:
        state: present
        src: "{{ (project_root_dir, 'opentelemetry', item) | path_join }}"
      loop:
        - otel-gateway-log-rbac.yml
        - otel-gateway.yml
        - otel-agent-telegraf.yml
        - otel-telegraf-servicemonitor.yml
        - otel-sidecar.yml

    - name: check for all pods
      ansible.builtin.include_role:
        name: wait_for_kubernetes_ready
