apiVersion: nfd.k8s-sigs.io/v1alpha1
kind: NodeFeatureRule
metadata:
  name: intel-dp-devices
spec:
  rules:
{% if dlb_dp_enabled | d(false) %}
    - name: "intel.dlb"
      labels:
        "intel.feature.node.kubernetes.io/dlb": "true"
      matchFeatures:
        - feature: pci.device
          matchExpressions:
            vendor: {op: In, value: ["8086"]}
            device: {op: In, value: ["2710", "2714"]}
            class: {op: In, value: ["0b40"]}
        - feature: kernel.loadedmodule
          matchExpressions:
            dlb2: {op: Exists}
{% endif %}
{% if dsa_dp_enabled | d(false) %}
    - name: "intel.dsa"
      labels:
        "intel.feature.node.kubernetes.io/dsa": "true"
      matchFeatures:
        - feature: pci.device
          matchExpressions:
            vendor: {op: In, value: ["8086"]}
            device: {op: In, value: ["0b25"]}
            class: {op: In, value: ["0880"]}
        - feature: kernel.loadedmodule
          matchExpressions:
            idxd: {op: Exists}
{% endif %}
{% if gpu_dp_enabled | d(false) %}
    - name: "intel.gpu"
{% if gas_enabled | d(false) %}
      extendedResources:
        gpu.intel.com/millicores: "@local.label.gpu.intel.com/millicores"
        gpu.intel.com/memory.max: "@local.label.gpu.intel.com/memory.max"
        gpu.intel.com/tiles: "@local.label.gpu.intel.com/tiles"
      matchFeatures:
        - feature: local.label
          matchExpressions:
            gpu.intel.com/millicores: {op: Exists}
            gpu.intel.com/memory.max: {op: Exists}
            gpu.intel.com/tiles: {op: Exists}
{% endif %}
      labels:
        "intel.feature.node.kubernetes.io/gpu": "true"
      matchFeatures:
        - feature: pci.device
          matchExpressions:
            vendor: {op: In, value: ["8086"]}
            class: {op: In, value: ["0300", "0380"]}
        - feature: kernel.loadedmodule
          matchExpressions:
            drm: {op: Exists}
{% endif %}
{% if qat_dp_enabled | d(false) %}
    - name: "intel.qat"
      labels:
        "intel.feature.node.kubernetes.io/qat": "true"
      matchFeatures:
        - feature: pci.device
          matchExpressions:
            vendor: {op: In, value: ["8086"]}
            device: {op: In, value: {{ qat_supported_pf_dev_ids | list + qat_supported_vf_dev_ids | list }}}
            class: {op: In, value: ["0b40"]}
{% if not (on_vms | default(false) and not update_qat_drivers | default(false) and configure_qat | default(false)) %}
        - feature: kernel.loadedmodule
          matchExpressions:
            intel_qat: {op: Exists}
{% endif %}
{% endif %}
{% if sgx_dp_enabled | d(false) %}
    - name: "intel.sgx"
      extendedResources:
        sgx.intel.com/epc: "@cpu.security.sgx.epc"
      labels:
        "intel.feature.node.kubernetes.io/sgx": "true"
      matchFeatures:
        - feature: cpu.cpuid
          matchExpressions:
            SGX: {op: Exists}
            SGXLC: {op: Exists}
        - feature: cpu.security
          matchExpressions:
            sgx.enabled: {op: IsTrue}
{% if not (ansible_distribution == "Ubuntu" and ansible_distribution_version is version('20.04', '==')) %}
        - feature: kernel.config
          matchExpressions:
            X86_SGX: {op: Exists}
{% endif%}
{% endif %}
