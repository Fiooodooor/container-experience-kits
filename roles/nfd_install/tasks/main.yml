##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies for NFD
  include_role:
    name: install_dependencies

- name: show all pods/containers status before proceeding
  command: kubectl get pods -A -o wide
  changed_when: false
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: copy NFD Helm chart to the controller node
  copy:
    src: "{{ (role_path, 'charts', 'node-feature-discovery') | path_join }}"
    dest: "{{ (project_root_dir, 'charts') | path_join }}"
    mode: 0755
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: add correct appVersion to Chart.yml
  replace:
    path: "{{ (project_root_dir, 'charts', 'node-feature-discovery', 'Chart') | path_join }}.yaml"
    regexp: '^appVersion: (.*)$'
    replace: 'appVersion: "{{ nfd_image_tag }}"'
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: populate NFD Helm chart values template and push to controller node
  template:
    src: "helm_values.yml.j2"
    dest: "{{ (project_root_dir, 'charts', 'nfd-values.yml') | path_join }}"
    force: yes
    mode: preserve
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: wait for cert-manager-webhook to be available
  k8s_info:
    kind: Deployment
    name: cert-manager-webhook
    namespace: cert-manager
    wait: yes
    wait_condition:
      reason: MinimumReplicasAvailable
      type: Available
    wait_timeout: 240
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - on_cloud is defined and on_cloud

- name: Deploy NFD chart using values files on target
  kubernetes.core.helm:
    name: node-feature-discovery
    release_state: present
    chart_ref: "{{ (project_root_dir, 'charts', 'node-feature-discovery') | path_join }}"
    release_namespace: "{{ nfd_namespace }}"
    values_files: "{{ (project_root_dir, 'charts', 'nfd-values.yml') | path_join }}"
    wait: yes
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: wait for kubernetes service to be accessible
  wait_for:
    port: 6443
    delay: 10
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - on_cloud is not defined or not on_cloud

- name: NodeFeatureRules for DPs
  block:
    - name: populate NodeFeatureRules yaml file and push to controller node
      template:
        src: "node-feature-rules.yml.j2"
        dest: "{{ (project_root_dir, 'node-feature-rules.yml') | path_join }}"
        force: yes
        mode: preserve

    - name: apply NodeFeatureRules
      k8s:
        state: present
        src: "{{ (project_root_dir, 'node-feature-rules.yml') | path_join }}"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - (qat_dp_enabled | d(false)) or
      (sgx_dp_enabled | d(false)) or
      (gpu_dp_enabled | d(false)) or
      (dsa_dp_enabled | d(false)) or
      (dlb_dp_enabled | d(false))
