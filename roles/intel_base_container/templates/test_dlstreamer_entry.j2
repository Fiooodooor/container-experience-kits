#!/bin/bash

TEST_POSTFIX="$1"

source /opt/intel/openvino/setupvars.sh
source /opt/intel/dlstreamer/setupvars.sh

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/intel/oneapi/compiler/latest/lib:/opt/intel/oneapi/compiler/latest/opt/compiler/lib

dlstreamer_data_path="$HOME"/data/dlstreamer_data_"$TEST_POSTFIX"
dlstreamer_output_path="$HOME"/data/dlstreamer_output_"$TEST_POSTFIX"
bin_file="${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/FP16/person-vehicle-bike-detection-2004.bin
if [[ ! -f ${bin_file} ]] || [[ $(md5sum "${bin_file}" | awk '{print $1}') != "650103e63235e8feae8a32f955cac855" ]]
then
    if [[ -d "${dlstreamer_data_path}"/models ]]
    then
        rm -rf "${dlstreamer_data_path}"/models
    fi
    mkdir -p "${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/FP16/
    curl -L https://storage.openvinotoolkit.org/repositories/open_model_zoo/2022.3/models_bin/1/person-vehicle-bike-detection-2004/FP16/person-vehicle-bike-detection-2004.xml \
        --output "${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/FP16/person-vehicle-bike-detection-2004.xml

    curl -L https://storage.openvinotoolkit.org/repositories/open_model_zoo/2022.3/models_bin/1/person-vehicle-bike-detection-2004/FP16/person-vehicle-bike-detection-2004.bin \
        --output "${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/FP16/person-vehicle-bike-detection-2004.bin
{% if prc_network %}
    echo "Download .proc file from gitmirror"
    curl -L https://raw.gitmirror.com/dlstreamer/dlstreamer/2022.3-release/samples/gstreamer/model_proc/intel/person-vehicle-bike-detection-2004.json \
        --output "${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/person-vehicle-bike-detection-2004.json
{% else %}
    echo "Download .proc file from github"
    curl -L https://raw.githubusercontent.com/dlstreamer/dlstreamer/2022.3-release/samples/gstreamer/model_proc/intel/person-vehicle-bike-detection-2004.json \
        --output "${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/person-vehicle-bike-detection-2004.json
{% endif %}
fi

video_file="${dlstreamer_data_path}"/videos/car-detection.mp4
if [[ ! -f ${video_file} ]] || [[ $(md5sum "${video_file}" | awk '{print $1}') != "e919de1193da5ceb8b0fd3cd998c2694" ]]
then
    if [[ -d "${dlstreamer_data_path}"/videos ]]
    then
        rm -rf "${dlstreamer_data_path}"/videos
    fi
    mkdir -p "${dlstreamer_data_path}"/videos/
    curl -L https://storage.openvinotoolkit.org/test_data/videos/car-detection.mp4 \
        --output "${dlstreamer_data_path}"/videos/car-detection.mp4
fi

output_mp4="${dlstreamer_output_path}"/output_person-vehicle-bike-detection-2004.mp4
if [[ -d ${dlstreamer_output_path} ]]
then
    rm -rf "${dlstreamer_output_path}"
fi
mkdir -p "${dlstreamer_output_path}"


{% if configure_gpu %}
gst-launch-1.0 -e filesrc location="${dlstreamer_data_path}"/videos/car-detection.mp4 ! \
qtdemux ! h264parse ! vaapih264dec ! video/x-raw\(memory:VASurface\) ! \
gvadetect pre-process-backend=vaapi-surface-sharing pre-process-config=VAAPI_FAST_SCALE_LOAD_FACTOR=1 \
model="${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/FP16/person-vehicle-bike-detection-2004.xml \
model-proc="${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/person-vehicle-bike-detection-2004.json \
device=GPU ! \
meta_overlay ! \
gvafpscounter ! \
vaapih264enc ! h264parse ! mp4mux ! filesink location="${output_mp4}"

{% else %}

gst-launch-1.0 -e filesrc location="${dlstreamer_data_path}"/videos/car-detection.mp4 ! \
decodebin ! \
gvadetect \
model="${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/FP16/person-vehicle-bike-detection-2004.xml \
model-proc="${dlstreamer_data_path}"/models/intel/person-vehicle-bike-detection-2004/person-vehicle-bike-detection-2004.json \
device=CPU ! \
gvawatermark ! \
gvafpscounter ! \
videoconvert ! x264enc ! mp4mux ! filesink location="${output_mp4}"
{% endif %}

gst-discoverer-1.0 "${output_mp4}" | tee "${dlstreamer_output_path}"/dlstreamer_test_output.txt

result="Failed"
pass_count=0
if grep -n "Bitrate" "${dlstreamer_output_path}"/dlstreamer_test_output.txt | awk -F: '{print $3}'
then
    (( pass_count+=1 )) || true
else
    result_fail_txt="Can not find Bitrate."
fi

if grep -n "H.264" "${dlstreamer_output_path}"/dlstreamer_test_output.txt
then
    (( pass_count+=1 )) || true
else
    result_fail_txt="Can not find H.264. ${result_fail_txt}"
fi

if [[ ${pass_count} -eq 2 ]]
then
    result="Passed"
else
    result="Failed: ${result_fail_txt}"
fi

echo "${result}" | tee "$HOME"/data/test_dlstreamer_result_"$TEST_POSTFIX"
