##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# Create toolkits directory first
- include_role:
    name: KMRA/create_toolkits_dir

# --mfence options are not supported by 'as' currently in stable distributions
# To workaround that problem, updated 'as' binary is installed in
# /usr/local/bin/ and it will be used during intel-sgx-ssl compilation
- include_role:
    name: KMRA/install_as_mfence_binaries

- name: Clone intel-sgx-ssl repository
  git:
    repo: 'https://github.com/intel/intel-sgx-ssl.git'
    dest: "{{ rlocal_toolkits_sgx_ssl_path }}"
    version: "{{ sgx_ssl_release_version }}"

- name: Get openssl sources
  get_url:
    url: '{{ openssl_source_url }}'
    dest: "{{ rlocal_toolkits_sgx_ssl_path }}/openssl_source/"

- name: Call build_openssl.sh
  command:
    cmd: "{{ rlocal_toolkits_sgx_ssl_path }}/Linux/build_openssl.sh"
    chdir: "{{ rlocal_toolkits_sgx_ssl_path }}/Linux/"
    creates: "{{ rlocal_toolkits_sgx_ssl_path }}/Linux/package"
  become: true

- name: Compile sgx-ssl
  make:
    chdir: "{{ rlocal_toolkits_sgx_ssl_path }}/Linux"
  become: true

# No idea why make has to be split here for 2 separate steps (one raw make,
# then make install) but it was not working without that - probably Makefile
# rule for sgx_ssl is messed up
- name: Install sgx-ssl
  make:
    chdir: "{{ rlocal_toolkits_sgx_ssl_path }}/Linux"
    target: install
  become: true
