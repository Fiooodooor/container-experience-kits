##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- import_role:
    name: KMRA/install_opensc_pkcs11tool

# RSA key generation part
# Needs to be run every time to check if key exist
- name: "Check if key with label {{ key_label }} exist"  # noqa 301
  shell:
    cmd: >-
      pkcs11-tool --module {{ p11_module_path }}
      --token-label {{ token_name }} --pin {{ user_pin }}
      -O | grep -c {{ key_label }}|| true
  register: key_in_token_lookup

# Create RSA key inside token
- name: "Create not-exportable RSA key-pair inside {{ token_name }} if it not \
  exists yet"
  command: >
    pkcs11-tool --module {{ p11_module_path }} --token-label {{ token_name }}
    --pin {{ user_pin }} -l -k --key-type rsa:2048 --id {{ key_id }}
    --label {{ key_label }}
  when: key_in_token_lookup.stdout | int == 0

- name: Generate and export uri for the key-pair
  set_fact:
    token_key_uri: "{{ pkcs11_engine_name }}:token={{ token_name }};\
      object={{ key_label }};id={{ key_id }};pin-value={{ user_pin }}"
