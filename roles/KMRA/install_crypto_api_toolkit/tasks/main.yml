##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# Create toolkits directory first
- import_role:
    name: KMRA/create_toolkits_dir

# Intel-sgx-ssl is used by crypto-api-toolkit
- import_role:
    name: KMRA/install_intel_sgx_ssl

# Get into crypto-api-toolkit sources and build it
- name: Clone crypto-api-toolkit-v2 repository
  git:
    repo: "{{ cryptoapi_repository_url }}"
    version: "{{ cryptoapi_version }}"
    dest: "{{ rlocal_toolkits_cryptoapi_path }}"
    # force is enabled because of changing content below
    force: true

# Disable tests because of broken dependencies in CTK Makefile
- name: >
    Disable broken tests in crypto-api-toolkit that are breaking compilation
  lineinfile:
    path: "{{ rlocal_toolkits_cryptoapi_path }}/src/Makefile.am"
    regexp: '^SUBDIRS ='
    line: 'SUBDIRS = p11'
    mode: "0700"

- name: Remove crypto-api-toolkit tokens-dir from previous version
  file:
    path: '/opt/intel/cryptoapitoolkit/tokens'
    state: absent
  become: true

# Using "sh ./autogen.sh" because autogen.sh in repository missess '#!' and it
# causes problems during ansible execution
- name: Call ./autogen.sh
  command:
    chdir: "{{ rlocal_toolkits_cryptoapi_path }}"
    cmd: "sh ./autogen.sh"
    creates: "{{ rlocal_toolkits_cryptoapi_path }}/configure"

- name: Call ./configure
  command:
    chdir: "{{ rlocal_toolkits_cryptoapi_path }}"
    cmd: "./configure --enable-dcap"
    creates: "{{ rlocal_toolkits_cryptoapi_path }}/Makefile"

- name: Compile crypto-api-toolkit
  make:
    chdir: "{{ rlocal_toolkits_cryptoapi_path }}"

- name: Install crypto-api-toolkit
  make:
    chdir: "{{ rlocal_toolkits_cryptoapi_path }}"
    target: install
  become: true
