---
# Source: docker-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ release_name }}-docker-registry
  labels:
    app: docker-registry
    chart: docker-registry-1.9.4
    release: {{ release_name }}
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: docker-registry
      release: {{ release_name }}
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: {{ release_name }}
      annotations:
        checksum/config: b6512fd9a59e099a4176321795e2a88258d3210614308faf9e0fc97da6e4fb6b
    spec:
      containers:
        - name: nginx
          image: "{{ nginx_image }}"
          ports:
            - containerPort: {{ registry_proxy }}
              name: nginx-https
          volumeMounts:
            - name: tls
              mountPath: "/etc/nginx/conf.d/"
            - name: nginx-conf
              mountPath: /etc/nginx
            - name: htpasswd
              mountPath: "/etc/nginx/conf.d/auth"
        - name: docker-registry
          image: "{{ registry_image }}"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          livenessProbe:
            exec:
              command:
              - sh
              - /tmp/probe.sh
              - {{ registry_addr }}:{{ registry_port }}
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - sh
              - /tmp/probe.sh
              - {{ registry_addr }}:{{ registry_port }}
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {}
          env:
            - name: REGISTRY_HTTP_ADDR
              value: "{{ registry_addr }}:{{ registry_port }}"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry/
            - name: "{{ release_name }}-docker-registry-config"
              mountPath: "/etc/docker/registry"
            - name: probe
              mountPath: /tmp/probe.sh

      nodeSelector:
        kubernetes.io/hostname: {{ groups['kube-master'][0] }}
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: docker-registry
        - name: {{ release_name }}-docker-registry-config
          configMap:
            name: {{ release_name }}-docker-registry-config
        - name: htpasswd
          secret:
            secretName: {{ release_name }}-docker-registry-secret
        - name: tls
          secret:
            secretName: {{ registry_secret_name }}
        - name: probe
          hostPath:
            path: /etc/probe.sh
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
