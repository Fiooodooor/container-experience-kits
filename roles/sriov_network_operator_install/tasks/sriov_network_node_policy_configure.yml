##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: Create directory for sriov network node policies definitions
  file:
    path: "{{ sriov_network_policies_dir }}"
    state: directory
    owner: root
    mode: 0755

- name: prepare custom SriovNetworkNodePolicy manifests if provided
  include_tasks: custom_sriov_network_policies_configure.yml
  loop: "{{ groups['kube_node'] }}"
  loop_control:
    loop_var: node
    extended: yes

- name: template sriov-network-policies
  template:
    src: "sriov_network_node_policy.yml.j2"
    dest: "{{ sriov_network_policies_dir }}/{{ hostvars[item]['inventory_hostname'] }}-sriov_network_node_policy.yml"
    force: yes
    mode: preserve
  when:
    - hostvars[item]['dataplane_interfaces'] | default({}) | length > 0
  loop: "{{ groups['kube_node'] }}"

- name: apply sriov network node policies configuration
  command: kubectl apply -f  ./
  args:
    chdir: "{{ sriov_network_policies_dir }}"
  changed_when: true

- name: wait for SriovNetworkNodeState CR after sriov network node policy
  shell: >-
    set -o pipefail && kubectl get SriovNetworkNodeState {{ hostvars[item]['ansible_hostname'] }}
    -n {{ sriov_network_operator_namespace }} -o yaml | grep 'syncStatus'
  args:
    executable: /bin/bash
  register: sriov_wait_policy
  until: "'InProgress' not in sriov_wait_policy.stdout"
  failed_when: "'Failed' in sriov_wait_policy.stdout or 'InProgress' in sriov_wait_policy.stdout or sriov_wait_policy.rc != 0"
  retries: 50
  delay: 10
  changed_when: false
  loop: "{{ groups['kube_node'] }}"
