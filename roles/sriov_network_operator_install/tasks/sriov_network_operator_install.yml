##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: delete sriov-network-operator deployment
  command: "helm uninstall {{ sriov_network_operator_helm_release_name }} -n {{ sriov_network_operator_namespace }}"
  failed_when: false
  register: helm_result
  changed_when: "helm_result.rc == 0"
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Create sriov-network-operator charts directory if does not exist
  file:
    path: "{{ sriov_network_charts_dir }}"
    state: directory
    owner: root
    mode: 0755

- name: copy charts to charts directory
  copy:
    src: "{{ role_path }}/charts/sriov-network-operator/"
    dest: "{{ sriov_network_charts_dir }}"
    owner: root
    group: root
    mode: "0755"

- name: populate sriov-network-operator chart values template and push to controller node
  template:
    src: "values.yml.j2"
    dest: "{{ sriov_network_charts_dir }}/values.yaml"
    force: yes
    mode: preserve
  changed_when: true

- name: label configured nodes with node-role.kubernetes.io/worker= label
  shell: "set -o pipefail &&  kubectl label nodes {{ hostvars[item]['ansible_hostname'] }} node-role.kubernetes.io/worker= --overwrite"
  args:
    executable: /bin/bash
  changed_when: true
  when:
    - hostvars[item]['dataplane_interfaces'] | default({}) | length > 0
  loop: "{{ groups['kube_node'] }}"

- name: deploy sriov-network-operator
  command: |
    helm upgrade \
    --install {{ sriov_network_operator_helm_release_name }} \
    --create-namespace \
    --wait \
    --namespace {{ sriov_network_operator_namespace }} ./
  args:
    chdir: "{{ sriov_network_charts_dir }}"
  changed_when: true

- name: wait for sriov-network-config-daemon daemonset
  pause:
    seconds: 20

- name: wait for sriov-network-config-daemon pods
  shell: >-
    set -o pipefail && kubectl get ds sriov-network-config-daemon
    -n {{ sriov_network_operator_namespace }} -o yaml | grep 'numberReady'
  args:
    executable: /bin/bash
  register: sriov_daemon_wait
  until: "'0' not in sriov_daemon_wait.stdout"
  failed_when: "'0' in sriov_daemon_wait.stdout or sriov_daemon_wait.rc != 0"
  retries: 30
  delay: 10
  changed_when: false

- name: check if SriovNetworkNodeState CR was created
  command: kubectl get SriovNetworkNodeState -n {{ sriov_network_operator_namespace }}
  register: sriov_node_state_check
  until: "'No resources found in {{ sriov_network_operator_namespace }}' not in sriov_node_state_check.stderr"
  failed_when: "'No resources found in {{ sriov_network_operator_namespace }}' in sriov_node_state_check.stderr"
  retries: 30
  delay: 10
  changed_when: false

- name: wait for SriovNetworkNodeState CR sync
  command: kubectl get SriovNetworkNodeState {{ item }} -n {{ sriov_network_operator_namespace }} -o yaml
  register: sriov_node_wait
  until: sriov_node_wait.stdout is not search('InProgress') and sriov_node_wait.stdout is search('syncStatus')
  failed_when:
    sriov_node_wait.stdout is search('Failed') or sriov_node_wait.stdout is search('InProgress') or sriov_node_wait.stdout is not search('syncStatus')
  retries: 30
  delay: 10
  changed_when: false
  loop: "{{ groups['kube_node'] }}"
