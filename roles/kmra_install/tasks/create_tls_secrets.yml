##
##   Copyright (c) 2020-2021 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: create tmp dir for heys-certs
  tempfile:
    state: directory
    suffix: kmra-mtls
  register: mtls_tmp_dir

- name: generate CA root crt
  command: >-
    openssl req -nodes -x509 -newkey rsa:2048
    -keyout {{ mtls_tmp_dir.path }}/ca.key
    -out {{ mtls_tmp_dir.path }}/ca.crt
    -subj "/O={{ kmra_ca_root_crt_subj.O }}/OU={{ kmra_ca_root_crt_subj.OU }}/CN={{ kmra_ca_root_crt_subj.CN }}"
  changed_when: true

- name: generate csr
  command: >-
    openssl req -nodes -newkey rsa:2048
    -keyout {{ mtls_tmp_dir.path }}/{{ item.name }}.key
    -out {{ mtls_tmp_dir.path }}/{{ item.name }}.csr
    -subj "/O={{ item.subj.O | default('') }}/OU={{ item.subj.OU | default('') }}/CN={{ item.subj.CN | default('') }}"
  loop: "{{ kmra_apps }}"
  changed_when: true
  when:
    - item.deploy

- name: generate certs
  command: >-
    openssl x509 -req -in {{ mtls_tmp_dir.path }}/{{ item.name }}.csr
    -CA {{ mtls_tmp_dir.path }}/ca.crt
    -CAkey {{ mtls_tmp_dir.path }}/ca.key
    {{ '-CAcreateserial' if ansible_loop.first }}
    {{ '-CAserial  ' + mtls_tmp_dir.path + '/ca.srl' if not ansible_loop.first }}
    -out {{ mtls_tmp_dir.path }}/{{ item.name }}.crt
  loop: "{{ kmra_apps }}"
  loop_control:
    extended: yes
  changed_when: true
  when:
    - item.deploy

- name: create secrets for kmra apps
  command: >-
    kubectl create secret generic {{ item.name }}-tls
    --from-file=tls.cert={{ mtls_tmp_dir.path }}/{{ item.name }}.crt
    --from-file=tls.key={{ mtls_tmp_dir.path }}/{{ item.name }}.key
    --from-file=ca.cert={{ mtls_tmp_dir.path }}/ca.crt
    -n {{ kmra_namespace }}
  loop: "{{ kmra_apps }}"
  changed_when: true
  when:
    - item.deploy

- name: clean up tmp directory
  file:
    path: "{{ mtls_tmp_dir.path }}"
    state: absent
  failed_when: false
