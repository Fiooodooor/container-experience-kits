apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      hostNetwork: false
      serviceAccountName: {{ .Release.Name }}
      initContainers:
      - name: init-tmpfs
        image: "{{ .Values.apphsm.init.image.repo }}/{{ .Values.apphsm.init.image.name }}:{{ .Values.apphsm.init.image.tag }}"
        command: ['sh', '-c', "rm -rf /var/lib/softhsm/tokens/*"]
      containers:
      - name: {{ .Release.Name }}
        ports:
          - name: apphsm
            containerPort: {{ .Values.apphsm.main.port }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.apphsm.main.port }}
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 2
        image: "{{ .Values.apphsm.main.image.repo }}/{{ .Values.apphsm.main.image.name }}:{{ .Values.apphsm.main.image.tag }}"
        imagePullPolicy: {{ .Values.apphsm.main.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-env
        volumeMounts:
        - name: mtls
          mountPath: /opt/intel/ca
          readOnly: true
        - name: sgx-qcnl-conf
          mountPath: /etc/sgx_default_qcnl.conf
          subPath: sgx_default_qcnl.conf
          readOnly: true
        - name: tmpfs
          mountPath: /tmp
          subPath: tmp
        - name: tmpfs
          mountPath: /var/lib/softhsm/tokens
          subPath: tokens
{{- if not (eq .Values.apphsm.oran "true") }}
        - name: apphsm-conf
          mountPath: /opt/intel/apphsm/apphsm.conf
          subPath: apphsm.conf
          readOnly: true
{{- else }}
        - name: apphsm-conf
          mountPath: /opt/apphsm_config/apphsm.conf
          subPath: apphsm.conf
          readOnly: true
# we have to mount these keys one by one, since apphsm doesn't like symbol links
        - name: custom-config
          mountPath: /opt/intel/custom_tls/server_cu.key
          subPath: server_cu.key
          readOnly: true
        - name: custom-config
          mountPath: /opt/intel/custom_tls/server_cu.crt
          subPath: server_cu.crt
          readOnly: true
        - name: custom-config
          mountPath: /opt/intel/custom_tls/server_du.key
          subPath: server_du.key
          readOnly: true
        - name: custom-config
          mountPath: /opt/intel/custom_tls/server_du.crt
          subPath: server_du.crt
          readOnly: true
        - name: custom-config
          mountPath: /opt/intel/custom_tls/server_ric.key
          subPath: server_cu.key
          readOnly: true
        - name: custom-config
          mountPath: /opt/intel/custom_tls/server_ric.crt
          subPath: server_cu.crt
          readOnly: true
        - name: custom-config
          mountPath: /opt/intel/custom_tls/client.key
          subPath: client.key
          readOnly: true
        - name: custom-config
          mountPath: /opt/intel/custom_tls/client.crt
          subPath: client.crt
          readOnly: true
{{ end }}
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 200m
            memory: 200Mi
        securityContext:
          runAsUser: 65333
          readOnlyRootFilesystem: true
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kmra
      volumes:
      - name: mtls
        secret:
          secretName: {{ .Release.Name }}-tls
          items:
          - key: tls.key
            path: apphsm.key
          - key: tls.cert
            path: apphsm.crt
          - key: ca.cert
            path: ca.crt
      - name: sgx-qcnl-conf
        configMap:
          name: {{ .Release.Name }}-qcnl-conf
      - name: apphsm-conf
        configMap:
          name: {{ .Release.Name }}-config
{{- if eq .Values.apphsm.oran "true" }}
      - name: custom-config
        configMap:
          name: {{ .Release.Name }}-custom-config
{{ end }}
      - name: apphsm-cmd
        configMap:
          name: {{ .Release.Name }}-entrypoint
          defaultMode: 0777
      - name: tmpfs
        emptyDir:
          medium: Memory
          sizeLimit: 64Mi
