##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# add those bm host in mixed cluster to a group
- hosts: k8s_cluster
  tasks:
    - name: Add hosts to inventory - bm_host
      ansible.builtin.add_host:
        hostname: "{{ inventory_hostname }}"
        groups: "bm_host"
        inventory_dir: '{{ inventory_dir }}'

- hosts: vm_host
  roles:
    - role: vm/compile_libvirt
      when:
        - ansible_distribution == "Ubuntu" and ansible_distribution_version == "22.04"
        - sgx_dp_enabled | default(false)
    - role: vm/conf_libvirt
  environment: "{{ proxy_env | d({}) }}"
  any_errors_fatal: true

# prepare vxlan unicast peers
- hosts: vm_host,k8s_cluster
  gather_facts: false
  tasks:
    - include_role:
        name: vm/manage_bridges # noqa role-name[path]
        tasks_from: vxlan_interface_name
    - include_role:
        name: vm/manage_bridges # noqa role-name[path]
        tasks_from: vxlan_unicast
      when: inventory_hostname == groups['vm_host'][0]
  environment: "{{ proxy_env | d({}) }}"
  any_errors_fatal: true

- hosts: vm_host
  gather_facts: false
  roles:
    - role: vm/prepare_vm_cluster
    - role: vm/manage_imgs
    - role: vm/manage_bridges
    - role: vm/manage_vms
    - role: vm/prepare_cek
  environment: "{{ proxy_env | d({}) }}"
  any_errors_fatal: true

- hosts: vm_host
  gather_facts: false
  serial: 1
  roles:
    - role: vm/prepare_bastion_host_config
  environment: "{{ proxy_env | d({}) }}"
  any_errors_fatal: true

- hosts: vm_host
  gather_facts: false
  roles:
    - vm/prepare_cek_vxlan
  environment: "{{ proxy_env | d({}) }}"
  any_errors_fatal: true

# need handle those baremetal hosts need connect to VMs
- hosts: k8s_cluster
  vars:
    - vms:
        - name: dummy
          vxlan: "{{ hostvars[groups['vm_host'][0]]['dhcp'][0] }}"
    - dhcp: []
  gather_facts: false
  serial: 1
  roles:
    - role: vm/install_bm_libvirt
    - role: vm/manage_bridges
    - role: vm/prepare_bm_host_config_vxlan
  environment: "{{ proxy_env | d({}) }}"
  any_errors_fatal: true

- hosts: vm_host
  gather_facts: false
  serial: 1
  roles:
    - role: vm/prepare_bastion_host_config_vxlan
    - role: vm/prepare_vm_inventory
  environment: "{{ proxy_env | d({}) }}"
  any_errors_fatal: true

- hosts: k8s_cluster
  handlers:
    - name: reboot VMs
      reboot: {reboot_timeout: 300}
  tasks:
    - name: Test updated inventory
      ping:
    - name: Check kernel commandline
      command: cat /proc/cmdline
      changed_when: false
      register: cmdline_info
    - name: Print kernel commandline
      debug:
        msg: "{{ cmdline_info.stdout }}"
    - name: Check if reboot is needed
      command: needs-restarting -r
      register: needs_reboot
      failed_when: false
      notify:
        - reboot VMs
      changed_when: needs_reboot.rc == 1
      when: vm_image_distribution | default("") == "rocky"
  environment: "{{ proxy_env | d({}) }}"
  any_errors_fatal: true
