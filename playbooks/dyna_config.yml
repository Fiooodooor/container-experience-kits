##
##   Copyright (c) 2020-2023 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# This playbook contains those tasks can be executed separatedly after
# RA installation,  to dynamically adjust some system configurations.

# Execute config dpdk role bind/unbind tasks on worker nodes
- hosts: "{{node | default('kube_node')}}"
  roles:
    - role: configure_dpdk
      dpdk_link_node1: "{{ groups.kube_node[0] }}"
      dpdk_link_node2: "{{ groups.kube_node[1] }}"
      tags:
        - dyna_config_dpdk
      when:
        - dyna_config_dpdk_bind | default(false) | bool or
          dyna_config_dpdk_unbind | default(false) | bool


# Pre-flight check for link operation
- hosts: localhost
  tasks:
    - name: check config dpdk link nodes count
      vars:
        link_node_count: "{{ groups['kube_node'] | length }}"
      assert:
        that: link_node_count == 2
        msg: "Config dpdk link is a 2 nodes operation, but current nodes count is {{ link_node_count }}"
      tags:
        - dyna_config_dpdk
      when:
        - dyna_config_dpdk_link | default(false) | bool

# Execute config dpdk role pre-link tasks on worker nodes
- hosts: "{{node | default('kube_node')}}"
  roles:
    - role: configure_dpdk
      dpdk_link_node1: "{{ groups.kube_node[0] }}"
      dpdk_link_node2: "{{ groups.kube_node[1] }}"
      dpdk_link_pre: true
      tags:
        - dyna_config_dpdk
      when:
        - dyna_config_dpdk_link | default(false) | bool

# Execute config dpdk role link tasks on local host
- hosts: localhost
  roles:
    - role: configure_dpdk
      dpdk_link_node1: "{{ groups.kube_node[0] }}"
      dpdk_link_node2: "{{ groups.kube_node[1] }}"
      tags:
        - dyna_config_dpdk
      when:
        - dyna_config_dpdk_link | default(false) | bool

# Execute config dpdk role post-link tasks on worker nodes
- hosts: "{{node | default('kube_node')}}"
  roles:
    - role: configure_dpdk
      dpdk_link_node1: "{{ groups.kube_node[0] }}"
      dpdk_link_node2: "{{ groups.kube_node[1] }}"
      dpdk_link_post: true
      tags:
        - dyna_config_dpdk
      when:
        - dyna_config_dpdk_link | default(false) | bool

# Execute gpu driver role on worker nodes
- hosts: "{{node | default('kube_node')}}"
  handlers:
    - name: Update grub on RedHat systems
      ansible.builtin.command: "grub2-mkconfig -o /boot/grub2/grub.cfg"
      when: ansible_os_family == "RedHat"
      changed_when: true
    - name: Update grub on Ubuntu systems
      ansible.builtin.command: "update-grub"
      when: ansible_distribution == "Ubuntu"
      changed_when: true
    - name: reboot server
      reboot: { reboot_timeout: 1200 }
      when:
        - inventory_hostname != "localhost"
  roles:
    - role: install_gpu_driver
      tags:
        - install_gpu_driver
      become: true

# Execute base container role on worker nodes
- hosts: "{{node | default('kube_node')}}"
  roles:
    - role: intel_base_container
      profile_name: "{{ container_set | default('on_prem_aibox') }}"
      gpu_type: "Arc"
      prc_network: false
      tags:
        - base_container

- hosts: "{{node | default('kube_node')}}"
  roles:
    - role: prometheus_install
      tags:
        - prometheus

    - role: intel_xpumanager
      tags:
        - xpumanager
