---
- hosts: k8s_cluster
  tasks: []
  roles:
    - role: cluster_defaults
      tags: defaults
    - role: wait_for_kubernetes_ready
      tags: k8s-ready
      when:
        - kubernetes | default(false) | bool
{%- if playbook_name in ['basic', 'full_nfv', 'on_prem', 'regional_dc', 'remote_fp', 'build_your_own'] %}
    # the cndp role has to be head of kmra install to avoid restarting docker after kmra is deployed (expected fix in kmra 2.3)
    - role: cndp_install
      tags: cndp
      when:
        - cndp_enabled | default(false) | bool
        - (ansible_distribution == "Ubuntu" and ansible_distribution_version >= "20.04") or
          (ansible_os_family == "RedHat" and ansible_distribution_version >= "8.5")
{% endif %}
    - role: remove_kubespray_host_dns_settings
      tags: remove-kubespray-host-dns-settings
      when:
        - remove_kubespray_host_dns_settings | default(false) | bool
    - role: adq_dp_install
      tags: adq-dp
      when: adq_dp.enabled | default(false) | bool
    - role: nfd_install
      tags: nfd
      when: nfd_enabled | default(true) | bool
{%- if playbook_name in ['full_nfv', 'remote_fp'] %}
    - role: intel_cpu_controlplane
      tags: cpu_ctlplane
      when: intel_cpu_controlplane.enabled | default(false) | bool
{% endif %}
    - role: operator_framework
      tags: operator-framework
      when:
        - intel_ethernet_operator_enabled | default(false) | bool or
          intel_sriov_fec_operator_enabled | default(false) | bool
    - role: intel_ethernet_operator
      tags: intel-ethernet-operator
      when:
        - intel_ethernet_operator_enabled | default(false) | bool
    - role: sriov_dp_install
      tags: sriov-net-dp
      when:
        - sriov_net_dp_enabled | default(false) | bool
        - not sriov_network_operator_enabled | default(true) | bool
    - role: sriov_network_operator_install
      tags: sriov-network-operator
      when:
        - sriov_network_operator_enabled | default(true) | bool
        - not sriov_net_dp_enabled | default(false) | bool
        - not sriov_cni_enabled | default(false) | bool
{%- if playbook_name in ['access', 'full_nfv', 'on_prem', 'regional_dc', 'remote_fp', 'storage', 'build_your_own'] %}
    - role: intel_dp_operator
      tags: dp-operator
      when: sgx_dp_enabled | default(false) or
            gpu_dp_enabled | default(false) or
            qat_dp_enabled | default(false) or
            dsa_dp_enabled | default(false) or
            dlb_dp_enabled | default(false)
{%- endif %}
{%- if playbook_name in ['full_nfv', 'regional_dc', 'build_your_own'] %}
    - role: gpu_dp_install
      tags: gpu-dp
      when: gpu_dp_enabled | default(false) | bool
{%- endif %}
{%- if playbook_name in ['access', 'full_nfv', 'on_prem', 'remote_fp', 'storage', 'build_your_own'] %}
    - role: qat_dp_install
      tags: qat-dp
      when: qat_dp_enabled | default(false) | bool
{%- endif %}
{%- if playbook_name in ['full_nfv', 'on_prem', 'remote_fp', 'regional_dc', 'build_your_own'] %}
    - role: sgx_dp_install
      tags: sgx-dp
      when:
        - sgx_dp_enabled | default(false)
        - ansible_os_family == "Debian" or (ansible_os_family == "RedHat" and ansible_distribution_version >= '8.3')
    - role: dlb_dp_install
      tags: dlb-dp
      when:
        - dlb_dp_enabled is defined and dlb_dp_enabled | default(false) | bool
        - (ansible_distribution == "Ubuntu" and ansible_distribution_version == '20.04' and update_kernel) or
          (ansible_distribution == "Ubuntu" and ansible_distribution_version >= '21.04') or
          (ansible_os_family == "RedHat" and ansible_distribution_version >= '9.0')
    - role: dsa_dp_install
      tags: dsa-dp
      when: dsa_dp_enabled is defined and dsa_dp_enabled | default(false) | bool
    - role: kmra_install
      tags: kmra
      when:
        - kmra.pccs.enabled | default(false) | bool or
          kmra.apphsm.enabled  | default(false) | bool or
          kmra.ctk_loadkey_demo.enabled  | default(false) | bool
        - (ansible_distribution == "Ubuntu" and ansible_distribution_version >= '20.04')
          or (ansible_os_family == "RedHat" and ansible_distribution_version >= '8.3')
    - role: tcs_install
      tags: tcs
      when:
        - tcs.enabled | default(false) | bool
    - role: tac_install
      tags: tac
      when:
        - tac.enabled | default(false) | bool
{%- endif %}
{%- if playbook_name in ['access', 'full_nfv', 'on_prem', 'remote_fp', 'regional_dc', 'build_your_own'] %}
    - role: intel_power_manager
      tags: power-manager
      when: intel_power_manager is defined and intel_power_manager.enabled | default(false) | bool
{%- endif %}
{%- if playbook_name in ['access', 'full_nfv', 'on_prem', 'remote_fp', 'storage', 'build_your_own'] %}
    - role: openssl_engine_install
      tags:
        - openssl-engine
        - intel-platform-qat-setup
      when: openssl_engine_enabled | default(false) | bool
{%- endif %}
{%- if playbook_name in ['full_nfv', 'on_prem', 'regional_dc', 'remote_fp', 'build_your_own'] %}
    - role: platform_aware_scheduling_install
      tags: platform-aware-scheduling
      when: tas_enabled | default(true) | bool or gas_enabled | default(true) | bool
{%- endif %}
    - role: kube_prometheus
      when:
        - prometheus_operator | default(false) | bool
    - role: collectd_install
      tags: monitoring
      when:
        - collectd_enabled | default(false) | bool
        - not (telegraf_enabled | default(true) | bool)
      vars:
        collectd_profile: {{ playbook_name }}
    - role: telegraf_install
      when:
        - telegraf_enabled | default(true) | bool
        - not (collectd_enabled | default(false) | bool)
      tags: monitoring
      vars:
        telegraf_profile: {{ playbook_name }}
{%- if playbook_name in ['access', 'full_nfv', 'build_your_own'] %}
    - role: intel_sriov_fec_operator
      tags: intel-sriov-fec-operator
      when:
        - intel_sriov_fec_operator_enabled | default(false) | bool
{%- endif %}
{%- if playbook_name in ['access', 'full_nfv', 'on_prem', 'regional_dc', 'remote_fp', 'build_your_own'] %}
    - role: istio_service_mesh
      tags: istio-service-mesh
      when:
        - istio_service_mesh.enabled | default(true) | bool
{%- endif %}
{%- if playbook_name in ['basic', 'full_nfv', 'on_prem', 'regional_dc', 'remote_fp', 'build_your_own'] %}
    - role: cndp_dp_install
      tags: cndp-dp
      when:
        - cndp_dp_enabled | default(false) | bool
        - (ansible_distribution == "Ubuntu" and ansible_distribution_version >= "20.04") or
          (ansible_os_family == "RedHat" and ansible_distribution_version >= "8.5")
{% endif %}
{%- if playbook_name in ['storage', 'full_nfv', 'build_your_own'] %}
    - role: minio_install
      tags: minio
      when:
        - minio_enabled | default(false) | bool
{%- endif %}
{%- if playbook_name in ['full_nfv', 'build_your_own'] %}
    - role: tadk_install
      tags: tadk
      when:
        - tadk_install | default(false) | bool
{%- endif %}
    - role: cadvisor_install
      tags: cadvisor
      when:
        - cadvisor_enabled | default(false) | bool
  environment:
    - "{{ '{{' }} proxy_env | d({}) {{ '}}' }}"
    - REGISTRY_AUTH_FILE: "{{ '{{' }} registry_containerd {{ '}}' }}"
  any_errors_fatal: true

- hosts: kube_node
  tasks: []
  roles:
    - role: cluster_defaults
      tags: defaults
    - role: sriov_cni_install
      when:
        - sriov_cni_enabled | default(false) | bool
        - not sriov_network_operator_enabled | default(true) | bool
      tags: sriov-cni
{%- if playbook_name in ['full_nfv', 'on_prem', 'remote_fp', 'build_your_own'] %}
    - role: bond_cni_install
      when: bond_cni_enabled | default(true) | bool
      tags: bond-cni
{%- endif %}
{%- if playbook_name in ['full_nfv', 'remote_fp', 'build_your_own'] %}
    - role: userspace_cni_install
      tags: userspace-cni
      when: userspace_cni_enabled | default(true) | bool
{%- endif %}
  environment: "{{ '{{' }} proxy_env | d({}) {{ '}}' }}"
  any_errors_fatal: true

- hosts: kube_control_plane
  tasks: []
  roles:
    - role: cluster_defaults
      tags: defaults
    - role: net_attach_defs_create
      tags: net-attach-defs
    - role: elasticsearch_install
      tags: elasticsearch
      when:
        - elasticsearch_enabled | default(false) | bool
    - role: jaeger_install
      tags: jaeger
      when:
        - jaeger_operator | default(false) | bool
    - role: opentelemetry_install
      when:
        - opentelemetry_enabled | default(false) | bool
      tags: opentelemetry
    - role: kibana_install
      when:
        - kibana_enabled | default(false) | bool
      tags: kibana
{%- if playbook_name in ['access', 'full_nfv', 'on_prem', 'regional_dc', 'remote_fp', 'build_your_own'] %}
    - role: linkerd_service_mesh
      tags: linkerd-service-mesh
      when:
        - linkerd_service_mesh.enabled | default(false) | bool
{%- endif %}
    - role: wait_for_kubernetes_ready
      tags: k8s-ready-final
      ignore_errors: yes
      when:
        - kubernetes | default(false) | bool
  environment: "{{ '{{' }} proxy_env | d({}) {{ '}}' }}"
  any_errors_fatal: true

- hosts: oru, kube_node[0]
  tasks: []
  roles:
{%- if playbook_name in ['access', 'full_nfv', 'build_your_own'] %}
    - role: cluster_defaults
      tags: defaults
    - role: intel_flexran
      tags: intel-flexran
      when:
        - intel_flexran_enabled | default(false) | bool
{%- endif %}
  any_errors_fatal: true
